{
  "version": 3,
  "sources": ["../src/internal/util.ts", "../src/twind/parse.ts", "../src/twind/directive.ts", "../src/twind/apply.ts", "../src/twind/helpers.ts", "../src/twind/plugins.ts", "../src/twind/preflight.ts", "../src/twind/variants.ts", "../src/internal/dom.ts", "../src/twind/sheets.ts", "../src/twind/modes.ts", "../src/twind/prefix.ts", "../src/twind/theme.ts", "../src/twind/translate.ts", "../src/twind/decorate.ts", "../src/twind/presedence.ts", "../src/twind/serialize.ts", "../src/twind/inject.ts", "../src/twind/configure.ts", "../src/twind/instance.ts", "../src/twind/default.ts"],
  "sourcesContent": ["import type {\n  Context,\n  Hasher,\n  Falsy,\n  MaybeThunk,\n  CSSRules,\n  ThemeScreen,\n  ThemeScreenValue,\n} from '../types'\n\ninterface Includes {\n  (value: string, search: string): boolean\n  <T>(value: readonly T[], search: T): boolean\n}\n\nexport const includes: Includes = (value: string | readonly unknown[], search: unknown) =>\n  // eslint-disable-next-line no-implicit-coercion\n  !!~(value as string).indexOf(search as string)\n\nexport const join = (parts: readonly string[], separator = '-'): string => parts.join(separator)\n\nexport const joinTruthy = (parts: readonly (string | Falsy)[], separator?: string): string =>\n  join(parts.filter(Boolean) as string[], separator)\n\nexport const tail = <T extends string | readonly unknown[]>(array: T, startIndex = 1): T =>\n  array.slice(startIndex) as T\n\nexport const identity = <T>(value: T): T => value\n\nexport const noop = (): void => {\n  /* no-op */\n}\n\nexport const capitalize = (value: string): string => value[0].toUpperCase() + tail(value)\n\nexport const hyphenate = (value: string): string => value.replace(/[A-Z]/g, '-$&').toLowerCase()\n\nexport const evalThunk = <T>(value: MaybeThunk<T>, context: Context): T => {\n  while (typeof value == 'function') {\n    value = (value as (context: Context) => T)(context)\n  }\n\n  return value\n}\n\nexport const ensureMaxSize = <K, V>(map: Map<K, V>, max: number): void => {\n  // Ensure the cache does not grow unlimited\n  if (map.size > max) {\n    map.delete(map.keys().next().value)\n  }\n}\n\nexport const merge = (target: CSSRules, source: CSSRules, context: Context): CSSRules =>\n  source\n    ? Object.keys(source).reduce((target, key) => {\n        const value = evalThunk(source[key], context)\n\n        if (value && typeof value == 'object' && !Array.isArray(value)) {\n          target[key] = merge((target[key] || {}) as CSSRules, value as CSSRules, context)\n        } else {\n          // hyphenate target key only if key is property like (\\w-)\n          target[hyphenate(key)] = value\n        }\n\n        return target\n      }, target)\n    : target\n\nexport const escape =\n  (typeof CSS !== 'undefined' && CSS.escape) ||\n  // Simplified: escaping only special characters\n  // Needed for NodeJS and Edge <79 (https://caniuse.com/mdn-api_css_escape)\n  ((className: string): string => {\n    const firstCodeUnit = className.charCodeAt(0)\n    let firstChar = ''\n\n    // If the character is the first character and is in the range [0-9] (2xl, ...)\n    if (firstCodeUnit >= 0x0030 && firstCodeUnit <= 0x0039) {\n      // https://drafts.csswg.org/cssom/#escape-a-character-as-code-point\n      firstChar = '\\\\' + firstCodeUnit.toString(16) + ' '\n      className = tail(className)\n    }\n\n    // Simplifed escape testing only for chars that we know happen to be in tailwind directives\n    return firstChar + className.replace(/[!./:#]/g, '\\\\$&')\n  })\n\nexport const buildMediaQuery = (screen: ThemeScreen): string => {\n  if (!Array.isArray(screen)) {\n    screen = [screen as ThemeScreenValue]\n  }\n\n  return (\n    '@media ' +\n    join(\n      (screen as ThemeScreenValue[]).map((screen) => {\n        if (typeof screen == 'string') {\n          screen = { min: screen }\n        }\n\n        return (\n          (screen as { raw?: string }).raw ||\n          join(\n            Object.keys(screen).map(\n              (feature) => `(${feature}-width:${(screen as Record<string, string>)[feature]})`,\n            ),\n            ' and ',\n          )\n        )\n      }),\n      ',',\n    )\n  )\n}\n\n// Based on https://stackoverflow.com/a/52171480\nexport const cyrb32: Hasher = (value: string): string => {\n  let h = 9\n\n  for (let index = value.length; index--; ) {\n    h = Math.imul(h ^ value.charCodeAt(index), 0x5f356495)\n  }\n\n  return 'tw-' + ((h ^ (h >>> 9)) >>> 0).toString(36)\n}\n\n/**\n * Find the array index of where to add an element to keep it sorted.\n *\n * @returns The insertion index\n */\nexport const sortedInsertionIndex = (array: readonly number[], element: number): number => {\n  let high = array.length\n\n  // Theres only one option then\n  if (high === 0) return 0\n\n  // Find position by binary search\n  for (let low = 0; low < high; ) {\n    const pivot = (high + low) >> 1\n\n    // Less-Then-Equal to add new equal element after all existing equal elements (stable sort)\n    if (array[pivot] <= element) {\n      low = pivot + 1\n    } else {\n      high = pivot\n    }\n  }\n\n  return high\n}\n", "import type { Rule, Token } from '../types'\n\nimport { join, tail, includes } from '../internal/util'\n\n// The parsing is stacked based\n// when ever we find a group start\n// - in strings ':' or '(',\n// - array values\n// - object keys and their value\n// we add an empty marker string `\"\"` into `groupings` to mark the group start\n// if we find a variant or prefix we push it onto `groupings`\n// once the group ends (whitespace or ')') we drop all entries until the last marker\n// This way we can filter `groupings` for trithy values which are either\n// a variant (starting with ':') or a prefix\n\n// Shared variables used during parsing\n\n// List of active groupings: either variant (':xxx') or prefix\n// sm:text => ':sm'\n// sm:(text) => ':sm', ''\n// text(center sm:hover:underline focus:black) sm:rounded\n// => 'text'\n// => 'text', ''\n// => 'text', '', ':sm'\n// => 'text', '', ':sm', ':hover'\n// => 'text', ''\n// => 'text', '', ':focus'\n// => 'text'\n// =>\n// => ':sm'\nlet groupings: string[]\n\n// List of parsed rules\nlet rules: Rule[]\n\n// A new group has been found\n// this maybe a value (':variant' or 'prefix') or an empty marker string\nconst startGrouping = (value = ''): '' => {\n  groupings.push(value)\n  return ''\n}\n\n// Close a group\n// Within strings we need to distinguish between a whitespace and a closing bracket\n// a) if we have a whitespace\n// we want to keep everything up to including the last group start\n//\n// b) if we have a non-whitespace\n// we want to keep everything before the last group start\nconst endGrouping = (isWhitespace?: boolean): void => {\n  // true => +1\n  // false => +0\n  groupings.length = Math.max(groupings.lastIndexOf('') + ~~(isWhitespace as boolean), 0)\n}\n\nconst onlyPrefixes = (s: string): '' | boolean => s && s[0] !== ':'\nconst onlyVariants = (s: string): '' | boolean => s[0] === ':'\n\nconst addRule = (directive: Rule['d'], negate?: boolean, important?: boolean): void => {\n  rules.push({\n    v: groupings.filter(onlyVariants),\n    d: directive,\n    n: negate,\n    i: important,\n    $: '',\n  })\n}\n\nconst saveRule = (buffer: string): '' => {\n  const negate = buffer[0] === '-'\n\n  if (negate) {\n    buffer = tail(buffer)\n  }\n\n  const important = buffer[buffer.length - 1] === '!'\n\n  if (important) {\n    buffer = buffer.slice(0, -1)\n  }\n\n  const prefix = join(groupings.filter(onlyPrefixes))\n\n  addRule(buffer === '&' ? prefix : (prefix && prefix + '-') + buffer, negate, important)\n\n  return ''\n}\n\nconst parseString = (token: string, isVariant?: boolean): void => {\n  let char: string\n  let buffer = ''\n\n  for (let position = 0; position < token.length; ) {\n    switch ((char = token[position++])) {\n      case ':':\n        // Check if this is an pseudo element \"after::\"\n        buffer =\n          buffer &&\n          startGrouping(':' + (token[position] === char ? token[position++] : '') + buffer)\n\n        break\n\n      case '(':\n        // If there is a buffer this is the prefix for all grouped tokens\n        buffer = buffer && startGrouping(buffer)\n\n        startGrouping()\n\n        break\n\n      case ')':\n      case ' ':\n      case '\\t':\n      case '\\n':\n      case '\\r':\n        buffer = buffer && saveRule(buffer)\n        endGrouping(char !== ')')\n\n        break\n\n      default:\n        buffer += char\n    }\n  }\n\n  if (buffer) {\n    if (isVariant) {\n      startGrouping(':' + buffer)\n    } else if (buffer.slice(-1) === '-') {\n      startGrouping(buffer.slice(0, -1))\n    } else {\n      saveRule(buffer)\n    }\n  }\n}\n\nconst parseGroupedToken = (token: Token): void => {\n  startGrouping()\n\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  parseToken(token)\n\n  endGrouping()\n}\n\nconst parseGroup = (key: string, token: Token): void => {\n  if (token) {\n    startGrouping()\n\n    // we care about: string, object and function\n    // \"undefined\"\n    // \"object\" - this includes arrays\n    // \"boolean\"\n    // \"number\"\n    // \"bigint\"\n    // \"string\"\n    // \"symbol\"\n    // \"function\"\n    // 2nd char is uniq\n    const isVariant = includes('tbu', (typeof token)[1])\n\n    parseString(key, isVariant)\n\n    if (isVariant) {\n      parseGroupedToken(token)\n    }\n\n    endGrouping()\n  }\n}\n\nconst parseToken = (token: Token): void => {\n  switch (typeof token) {\n    case 'string':\n      parseString(token)\n      break\n    case 'function':\n      addRule(token)\n      break\n    case 'object':\n      if (Array.isArray(token)) {\n        token.forEach(parseGroupedToken)\n      } else if (token) {\n        Object.keys(token).forEach((key) => {\n          parseGroup(key, token[key])\n        })\n      }\n  }\n}\n\n// A function to be called with an interpolation\n// to add dynamic rules\ntype Static = (interpolation: Token) => void\n\n// Template literal strings do not change\n// we can pre-calculate all groupings and static rules\n// which are later combined with the dynamic rules from interpolations\n//\n// For this to work we assume that interpolations do not\n// affect the current groupings:\n// Fast mode: tw`text(${'center'})`, tw`text-${'center'}`\n// Slow mode: tw`text-${'red'}-600`, tw`bg(${'red'}(600 700(hover:&))`, tw`${\"hover\"}:text-blue-600`,\nconst staticsCaches = new WeakMap<TemplateStringsArray, Static[]>()\n\nconst buildStatics = (strings: TemplateStringsArray): Static[] => {\n  let statics = staticsCaches.get(strings)\n\n  if (!statics) {\n    // Index within strings from which on we use slow mode for parsing\n    // these means collecting all strings and string interpolations\n    // into `buffer` and parse it dynamicly\n    let slowModeIndex = NaN\n\n    // Used during slow mode to join consecutive strings\n    let buffer = ''\n\n    statics = strings.map((token, index) => {\n      if (slowModeIndex !== slowModeIndex && includes(':-(', (strings[index + 1] || '')[0])) {\n        // If the the string after the upcoming interpolation\n        // would start a grouping we switch to slow mode now\n        slowModeIndex = index\n      }\n\n      // Slow mode\n      if (index >= slowModeIndex) {\n        return (interpolation) => {\n          // If first => reset bufferd tokens\n          if (index === slowModeIndex) {\n            buffer = ''\n          }\n\n          buffer += token\n\n          // Join consecutive strings\n          if (typeof interpolation == 'string') {\n            buffer += interpolation\n          } else if (interpolation) {\n            parseString(buffer)\n            buffer = ''\n            parseToken(interpolation)\n          }\n\n          // If last => parse remaining buffered tokens\n          if (index === strings.length - 1) {\n            parseString(buffer)\n          }\n        }\n      }\n\n      // Fast mode\n      // Reset rules to extract all static generated rules\n      const staticRules = (rules = [])\n\n      parseString(token)\n\n      // Copy the active groupings to set them\n      // before interpolation processing\n      const activeGroupings = [...groupings]\n\n      // Reset the rules\n      rules = []\n\n      return (interpolation) => {\n        rules.push(...staticRules)\n        groupings = [...activeGroupings]\n        if (interpolation) {\n          parseToken(interpolation)\n        }\n      }\n    })\n\n    staticsCaches.set(strings, statics)\n  }\n\n  return statics\n}\n\nexport const parse = (tokens: unknown[]): Rule[] => {\n  groupings = []\n  rules = []\n\n  // Handles template literal strings\n  if (\n    Array.isArray(tokens[0] as TemplateStringsArray) &&\n    Array.isArray((tokens[0] as TemplateStringsArray).raw)\n  ) {\n    buildStatics(tokens[0] as TemplateStringsArray).forEach((apply, index) =>\n      apply(tokens[index + 1] as Token),\n    )\n  } else {\n    parseToken(tokens as Token)\n  }\n\n  return rules\n}\n", "import type { Context, Directive, MaybeThunk } from '../types'\n\nimport { ensureMaxSize, evalThunk } from '../internal/util'\n\nlet isFunctionFree: boolean\nconst detectFunction = (key: string, value: unknown): unknown => {\n  if (typeof value == 'function') {\n    isFunctionFree = false\n  }\n\n  return value\n}\n\nconst stringify = (data: unknown): string | false => {\n  isFunctionFree = true\n\n  const key = JSON.stringify(data, detectFunction)\n\n  return isFunctionFree && key\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst cacheByFactory = new WeakMap<\n  (data: any, context: Context) => any,\n  Map<string, Directive<any>>\n>()\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\n/**\n * Returns an optimized and cached function for use with `tw`.\n *\n * `tw` caches rules based on the function identity. This helper caches\n * the function based on the data.\n *\n * @param factory to use when the directive is invoked\n * @param data to use\n */\nexport const directive = <Data, T>(\n  factory: (data: Data, context: Context) => MaybeThunk<T>,\n  data: Data,\n): Directive<T> => {\n  const key = stringify(data)\n\n  let directive: Directive<T> | undefined\n\n  if (key) {\n    // eslint-disable-next-line no-var\n    var cache = cacheByFactory.get(factory)\n\n    if (!cache) {\n      cacheByFactory.set(factory, (cache = new Map()))\n    }\n\n    directive = cache.get(key)\n  }\n\n  if (!directive) {\n    directive = Object.defineProperty(\n      (params: string[] | Context, context: Context): T => {\n        context = Array.isArray(params) ? context : params\n        return evalThunk(factory(data, context), context)\n      },\n      'toJSON',\n      {\n        // Allow twind to generate a unique id for this directive\n        // twind uses JSON.stringify which returns undefined for functions like this directive\n        // providing a toJSON function allows to include this directive in the id generation\n        value: () => key || data,\n      },\n    )\n\n    if (cache) {\n      cache.set(key as string, directive as Directive<T>)\n\n      // Ensure the cache does not grow unlimited\n      ensureMaxSize(cache, 10000)\n    }\n  }\n\n  return directive as Directive<T>\n}\n", "import type { Token, Directive, CSSRules, Context } from '../types'\n\nimport { parse } from './parse'\nimport { directive } from './directive'\n\nexport interface Apply {\n  (strings: TemplateStringsArray, ...interpolations: Token[]): Directive<CSSRules>\n\n  (...tokens: Token[]): Directive<CSSRules>\n}\n\nconst applyFactory = (tokens: unknown[], { css }: Context) => css(parse(tokens))\n\nexport const apply: Apply = (...tokens: unknown[]): Directive<CSSRules> =>\n  directive(applyFactory, tokens)\n", "/* eslint-disable @typescript-eslint/consistent-type-assertions */\nimport type { CSSRules } from '../types'\n\nimport { joinTruthy } from '../internal/util'\n\nconst positions = (resolve: (position: string) => undefined | string[] | void) => (\n  value: string | string[] | undefined,\n  position: string,\n  prefix?: string,\n  suffix?: string,\n): CSSRules | undefined => {\n  if (value) {\n    const properties = position && resolve(position)\n\n    if (properties && properties.length > 0) {\n      return properties.reduce((declarations, property) => {\n        declarations[joinTruthy([prefix, property, suffix])] = value\n        return declarations\n      }, {} as CSSRules)\n    }\n  }\n}\n\nexport const corners = positions(\n  (key) =>\n    (({\n      t: ['top-left', 'top-right'],\n      r: ['top-right', 'bottom-right'],\n      b: ['bottom-left', 'bottom-right'],\n      l: ['bottom-left', 'top-left'],\n      tl: ['top-left'],\n      tr: ['top-right'],\n      bl: ['bottom-left'],\n      br: ['bottom-right'],\n    } as Record<string, undefined | string[]>)[key]),\n)\n\nexport const expandEdges = (key: string): string[] | undefined => {\n  const parts = (({ x: 'lr', y: 'tb' } as Record<string, undefined | string>)[key] || key || '')\n    .split('')\n    .sort()\n\n  for (let index = parts.length; index--; ) {\n    if (\n      !(parts[index] = ({\n        t: 'top',\n        r: 'right',\n        b: 'bottom',\n        l: 'left',\n      } as Record<string, string>)[parts[index]])\n    )\n      return\n  }\n\n  if (parts.length) return parts\n}\n\n// Support several edges like 'tr'\n// 'x' and 'y' can not be combined with others because size 'xl'\n// Every char must be a edge position\n// Sort to have consistent declaration ordering\nexport const edges = positions(expandEdges)\n/* eslint-enable @typescript-eslint/consistent-type-assertions */\n", "/* eslint-disable no-return-assign, no-cond-assign, @typescript-eslint/consistent-type-assertions */\nimport type {\n  Theme,\n  CSSRules,\n  CSSProperties,\n  Plugins,\n  ThemeResolver,\n  Context,\n  Falsy,\n  ThemeContainer,\n  ThemeScreen,\n} from '../types'\n\nimport { includes, join, joinTruthy, tail, capitalize, buildMediaQuery } from '../internal/util'\nimport { corners, expandEdges, edges } from './helpers'\n\ntype PluginHandler = (\n  parameters: string[],\n  context: Context,\n  id: string,\n) => CSSRules | string | Falsy\n\n// Shared variables\nlet _: undefined | string | CSSRules | CSSProperties | string[] | boolean | Falsy | number\nlet __: undefined | string | CSSProperties\nlet $: undefined | string | number | ThemeScreen\n\nconst property = (property: string) => (\n  params: string[],\n  context: unknown,\n  id: string,\n): CSSRules => ({\n  [property]: id + ((_ = join(params)) && '-' + _),\n})\n\nconst propertyValue = (property?: string, separator?: string) => (\n  params: string[],\n  context?: Context,\n  id?: string,\n): CSSRules => ({\n  [property || (id as string)]: join(params, separator),\n})\n\nconst themeProperty = (section?: keyof Theme): PluginHandler => (\n  params: string[],\n  { theme },\n  id,\n) => ({\n  [section || id]: theme(section || (id as keyof Theme), params) as string,\n})\n\nconst alias = (handler: PluginHandler, name: string): PluginHandler => (params, context) =>\n  handler(params, context, name)\n\nconst display = property('display')\nconst position = property('position')\nconst textTransform = property('textTransform')\nconst textDecoration = property('textDecoration')\nconst fontStyle = property('fontStyle')\nconst fontVariantNumeric = (key: string): PluginHandler => (params, context, id) => ({\n  ['--tw-' + key]: id,\n  fontVariantNumeric:\n    'var(--tw-ordinal,/*!*/ /*!*/) var(--tw-slashed-zero,/*!*/ /*!*/) var(--tw-numeric-figure,/*!*/ /*!*/) var(--tw-numeric-spacing,/*!*/ /*!*/) var(--tw-numeric-fraction,/*!*/ /*!*/)',\n})\n\nconst inset: PluginHandler = (params, { theme }, id) => ({ [id]: theme('inset', params) })\n\nconst opacityProperty = (\n  params: string[],\n  theme: ThemeResolver,\n  id: string,\n  section = id,\n): CSSRules => ({\n  [`--tw-${id}-opacity`]: theme((section + 'Opacity') as 'textOpacity', tail(params)),\n})\n\nconst parseColorComponent = (chars: string, factor: number): number =>\n  Math.round(parseInt(chars, 16) * factor)\n\nconst asRGBA = <T extends string | undefined>(\n  color: T,\n  opacityProperty: string,\n  opacityDefault?: string,\n): T | string => {\n  if (color && color[0] === '#') {\n    return `rgba(${parseColorComponent(\n      color.substr(1, (_ = (color.length - 1) / 3)),\n      ($ = [17, 1, 0.062272][_ - 1]),\n    )},${parseColorComponent(color.substr(1 + _, _), $)},${parseColorComponent(\n      color.substr(1 + 2 * _, _),\n      $,\n    )},${\n      opacityProperty\n        ? `var(--tw-${opacityProperty}${opacityDefault ? ',' + opacityDefault : ''})`\n        : opacityDefault || 1\n    })`\n  }\n\n  return color\n}\n\nconst withOpacityFallback = (\n  property: string,\n  kind: string,\n  color: string | undefined,\n): CSSRules | undefined =>\n  color && (_ = asRGBA(color, kind + '-opacity')) && _ !== color\n    ? {\n        [`--tw-${kind}-opacity`]: '1',\n        [property]: [color, _],\n      }\n    : { [property]: color }\n\nconst transparentTo = (color: string) => (($ = asRGBA(color, '', '0')) === _ ? 'transparent' : $)\n\nconst reversableEdge = (\n  params: string[],\n  { theme }: Context,\n  id: string,\n  section: 'divideWidth' | 'space',\n  prefix: string,\n  suffix?: string,\n  // eslint-disable-next-line max-params\n): CSSRules | undefined =>\n  (_ = ({ x: ['right', 'left'], y: ['bottom', 'top'] } as Record<string, undefined | string[]>)[\n    params[0]\n  ]) && ($ = `--tw-${id}-${params[0]}-reverse`)\n    ? params[1] === 'reverse'\n      ? {\n          [$]: '1',\n        }\n      : {\n          [$]: '0',\n          [joinTruthy([prefix, _[0], suffix])]:\n            (__ = theme(section, tail(params))) && `calc(${__} * var(${$}))`,\n          // With fallback\n          [joinTruthy([prefix, _[1], suffix])]: __ && [__, `calc(${__} * calc(1 - var(${$})))`],\n        }\n    : undefined\n\nconst placeHelper = (property: string, params: string[]): CSSRules => ({\n  // 'auto'\n  // 'start'\n  // 'end'\n  // 'center'\n  // 'stretch'\n  // 'between'\n  // 'around'\n  // 'evenly'\n  // 'between', 'around', 'evenly' => space-$0\n  // 4th char is unique\n  [property]: (includes('wun', (params[0] || '')[3]) ? 'space-' : '') + params[0],\n})\n\nconst contentPluginFor = (property: string) => (params: string[]): CSSRules =>\n  includes(['start', 'end'], params[0])\n    ? { [property]: `flex-${params[0]}` }\n    : placeHelper(property, params)\n\nconst gridPlugin = (kind: string): PluginHandler => (params) => {\n  switch (params[0]) {\n    case 'auto':\n      return { [`grid-${kind}`]: 'auto' }\n    case 'span':\n      return {\n        [`grid-${kind}`]: params[1] === 'full' ? '1 / -1' : `span ${params[1]} / span ${params[1]}`,\n      }\n    case 'start':\n    case 'end':\n      return {\n        [`grid-${kind}-${params[0]}`]: params[1],\n      }\n  }\n}\n\nconst border: PluginHandler = (params, { theme }, id): CSSRules | undefined => {\n  switch (params[0]) {\n    case 'solid':\n    case 'dashed':\n    case 'dotted':\n    case 'double':\n    case 'none':\n      return propertyValue('borderStyle')(params)\n    case 'collapse':\n    case 'separate':\n      return propertyValue('borderCollapse')(params)\n    case 'opacity':\n      return opacityProperty(params, theme, id)\n  }\n\n  return (_ = theme((id + 'Width') as 'borderWidth' | 'divideWidth', params, '' /* Optional */))\n    ? { borderWidth: _ }\n    : withOpacityFallback(\n        'borderColor',\n        id,\n        theme((id + 'Color') as 'borderColor' | 'divideColor', params) as string,\n      )\n}\n\nconst transform = (gpu?: boolean): string =>\n  (gpu\n    ? 'translate3d(var(--tw-translate-x,0),var(--tw-translate-y,0),0)'\n    : 'translateX(var(--tw-translate-x,0)) translateY(var(--tw-translate-y,0))') +\n  ' rotate(var(--tw-rotate,0)) skewX(var(--tw-skew-x,0)) skewY(var(--tw-skew-y,0)) scaleX(var(--tw-scale-x,1)) scaleY(var(--tw-scale-y,1))'\n\n// .scale-0\t--scale-x: 0;\n// .scale-x-150\n// .scale-y-0\n// .translate-x-0\t--translate-x: 0;\n// .translate-x-1\t--translate-x: 0.25rem;\n// .translate-y-px\t--translate-y: 1px;\n// .translate-y-full\t--translate-y: 100%;\n// .translate-y-1/2\t--translate-y: 50%;\n// .skew-y-0\t--skew-y: 0;\n// .skew-y-1\t--skew-y: 1deg;\nconst transformXYFunction: PluginHandler = (params, context, id) =>\n  (_ = context.theme(id as 'scale' | 'skew' | 'translate', params[1] || params[0])) && {\n    [`--tw-${id}-x`]: params[0] !== 'y' && _,\n    [`--tw-${id}-y`]: params[0] !== 'x' && _,\n    transform: [`${id}${params[1] ? params[0].toUpperCase() : ''}(${_})`, transform()],\n  }\n\nconst edgesPluginFor = (key: 'margin' | 'padding'): PluginHandler => (params, context, id) =>\n  id[1] ? edges(context.theme(key, params), id[1], key) : themeProperty(key)(params, context, id)\n\n// For p-*, px-*, pt-*\nconst padding = edgesPluginFor('padding')\n\n// For m-*, mx-*, mt-*\nconst margin = edgesPluginFor('margin')\n\n// 'min-w-full' -> minWidth\n// 'max-h-0.5' -> maxHeight\nconst minMax: PluginHandler = (params, { theme }, id) =>\n  (_ = ({ w: 'width', h: 'height' } as Record<string, undefined | string>)[params[0]]) && {\n    [(_ = `${id}${capitalize(_)}`)]: theme(\n      _ as 'minWidth' | 'minHeight' | 'maxWidth' | 'maxHeight',\n      tail(params),\n    ),\n  }\n\nexport const corePlugins: Plugins = {\n  group: (params, { tag }, id) => tag(join([id, ...params])),\n\n  hidden: alias(display, 'none'),\n  inline: display,\n  block: display,\n  contents: display,\n  flow: display,\n\n  table: (params, context, id) =>\n    includes(['auto', 'fixed'], params[0])\n      ? { tableLayout: params[0] }\n      : display(params, context, id),\n\n  flex(params, context, id) {\n    switch (params[0]) {\n      case 'row':\n      case 'col':\n        return {\n          flexDirection: join(params[0] === 'col' ? ['column', ...tail(params)] : params),\n        }\n      case 'nowrap':\n      case 'wrap':\n        return { flexWrap: join(params) }\n      case 'grow':\n      case 'shrink':\n        return { [`flex-${params[0]}`]: params[1] || '1' }\n    }\n\n    return (_ = context.theme('flex', params, '' /* Optional */))\n      ? { flex: _ }\n      : display(params, context, id)\n  },\n\n  grid(params, context, id) {\n    switch (params[0]) {\n      case 'cols':\n      case 'rows':\n        return (\n          params.length > 1 && {\n            [`grid-template-${params[0] === 'cols' ? 'columns' : params[0]}`]:\n              params.length === 2 && Number(params[1])\n                ? `repeat(${params[1]},minmax(0,1fr))`\n                : join(tail(params), ' '),\n          }\n        )\n\n      case 'flow':\n        return (\n          params.length > 1 && {\n            gridAutoFlow: join(\n              params[1] === 'col' ? ['column', ...tail(params, 2)] : tail(params),\n              ' ',\n            ),\n          }\n        )\n    }\n\n    return display(params, context, id)\n  },\n\n  auto: (params) =>\n    includes(['cols', 'rows'], params[0]) &&\n    (_ =\n      params.length === 2\n        ? ({\n            auto: 'auto',\n            min: 'min-content',\n            max: 'max-content',\n            fr: 'minmax(0,1fr)',\n          } as Record<string, undefined | string>)[params[1]] || `minmax(0,${params[1]})`\n        : params.length > 2 && `minmax(${join(tail(params), ',')})`) && {\n      [`grid-auto-${params[0] === 'cols' ? 'columns' : 'rows'}`]: _,\n    },\n\n  static: position,\n  fixed: position,\n  absolute: position,\n  relative: position,\n  sticky: position,\n\n  visible: { visibility: 'visible' },\n  invisible: { visibility: 'hidden' },\n\n  antialiased: {\n    WebkitFontSmoothing: 'antialiased',\n    MozOsxFontSmoothing: 'grayscale',\n  },\n\n  'subpixel-antialiased': {\n    WebkitFontSmoothing: 'auto',\n    MozOsxFontSmoothing: 'auto',\n  },\n\n  truncate: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n  },\n\n  'sr-only': {\n    position: 'absolute',\n    width: '1px',\n    height: '1px',\n    padding: '0',\n    margin: '-1px',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    clip: 'rect(0,0,0,0)',\n    borderWidth: '0',\n  },\n\n  'not-sr-only': {\n    position: 'static',\n    width: 'auto',\n    height: 'auto',\n    padding: '0',\n    margin: '0',\n    overflow: 'visible',\n    whiteSpace: 'normal',\n    clip: 'auto',\n  },\n\n  resize: (params) => ({\n    resize:\n      ({ x: 'vertical', y: 'horizontal' } as Record<string, string | undefined>)[params[0]] ||\n      params[0] ||\n      'both',\n  }),\n\n  box: (params) => ({ 'box-sizing': `${params[0]}-box` }),\n\n  // .appearance-none -> appearance: none;\n  // .appearance-auto -> appearance: auto;\n  // .appearance-menulist-button; -> appearance: menulist-button;\n  // .appearance-textfield -> appearance: textfield;\n  appearance: propertyValue(),\n  cursor: propertyValue(),\n\n  float: propertyValue(),\n  clear: propertyValue(),\n\n  top: inset,\n  right: inset,\n  bottom: inset,\n  left: inset,\n\n  // 'inset-0'\n  // 'inset-1.5'\n  // 'inset-x-1.5'\n  inset: (params, { theme }) =>\n    (_ = expandEdges(params[0]))\n      ? edges(theme('inset', tail(params)), params[0])\n      : (_ = theme('inset', params)) && {\n          top: _,\n          right: _,\n          bottom: _,\n          left: _,\n        },\n\n  underline: textDecoration,\n  'line-through': textDecoration,\n  'no-underline': alias(textDecoration, 'none'),\n\n  'text-underline': alias(textDecoration, 'underline'),\n  'text-no-underline': alias(textDecoration, 'none'),\n  'text-line-through': alias(textDecoration, 'line-through'),\n\n  uppercase: textTransform,\n  lowercase: textTransform,\n  capitalize: textTransform,\n\n  'normal-case': alias(textTransform, 'none'),\n  'text-normal-case': alias(textTransform, 'none'),\n\n  italic: fontStyle,\n  'not-italic': alias(fontStyle, 'normal'),\n\n  'font-italic': alias(fontStyle, 'italic'),\n  'font-not-italic': alias(fontStyle, 'normal'),\n\n  font: (params, context, id) =>\n    (_ = context.theme('fontFamily', params, '' /* Optional */))\n      ? { fontFamily: _ }\n      : themeProperty('fontWeight')(params, context, id),\n\n  items: (params) => ({\n    alignItems: includes(['start', 'end'], params[0]) ? `flex-${params[0]}` : join(params),\n  }),\n\n  'justify-self': propertyValue(),\n  'justify-items': propertyValue(),\n  justify: contentPluginFor('justifyContent'),\n  content: contentPluginFor('alignContent'),\n  self: contentPluginFor('alignSelf'),\n\n  place: (params) => placeHelper('place-' + params[0], tail(params)),\n\n  overscroll: (params) => ({\n    ['overscrollBehavior' + (params[1] ? '-' + params[0] : '')]: params[1] || params[0],\n  }),\n\n  col: gridPlugin('column'),\n  row: gridPlugin('row'),\n\n  // .duration-75\ttransition-duration: 75ms;\n  // .duration-75\ttransition-duration: 75ms;\n  duration: themeProperty('transitionDuration'),\n\n  // .delay-75\ttransition-delay: 75ms;\n  // .delay-100\ttransition-delay: 100ms;\n  delay: themeProperty('transitionDelay'),\n\n  tracking: themeProperty('letterSpacing'),\n\n  // .leading-10\tline-height: 2.5rem;\n  // .leading-none\tline-height: 1;\n  // .leading-tight\tline-height: 1.25;\n  leading: themeProperty('lineHeight'),\n\n  // .z-50\tz-index: 50;\n  // .z-auto\tz-index: auto;\n  z: themeProperty('zIndex'),\n\n  opacity: themeProperty(),\n\n  ease: themeProperty('transitionTimingFunction'),\n\n  p: padding,\n  py: padding,\n  px: padding,\n  pt: padding,\n  pr: padding,\n  pb: padding,\n  pl: padding,\n\n  m: margin,\n  my: margin,\n  mx: margin,\n  mt: margin,\n  mr: margin,\n  mb: margin,\n  ml: margin,\n\n  // .w-64\twidth: 16rem;\n  // .w-auto\twidth: auto;\n  // .w-px\twidth: 1px;\n  // .w-1/2\twidth: 50%;\n  // .w-full\twidth: 100%;\n  // .w-screen\twidth: 100vw;\n  w: themeProperty('width'),\n  h: themeProperty('height'),\n\n  min: minMax,\n  max: minMax,\n\n  fill: themeProperty(),\n\n  order: themeProperty(),\n\n  origin: propertyValue('transformOrigin', ' '),\n\n  select: propertyValue('userSelect'),\n\n  'pointer-events': propertyValue(),\n\n  align: propertyValue('verticalAlign'),\n\n  whitespace: propertyValue('whiteSpace'),\n\n  'normal-nums': { fontVariantNumeric: 'normal' },\n  ordinal: fontVariantNumeric('ordinal'),\n  'slashed-zero': fontVariantNumeric('slashed-zero'),\n  'lining-nums': fontVariantNumeric('numeric-figure'),\n  'oldstyle-nums': fontVariantNumeric('numeric-figure'),\n  'proportional-nums': fontVariantNumeric('numeric-spacing'),\n  'tabular-nums': fontVariantNumeric('numeric-spacing'),\n  'diagonal-fractions': fontVariantNumeric('numeric-fraction'),\n  'stacked-fractions': fontVariantNumeric('numeric-fraction'),\n\n  // 'overflow-visible'\n  // 'overflow-x-hidden'\n  overflow: (params, context, id) =>\n    includes(['ellipsis', 'clip'], params[0])\n      ? propertyValue('textOverflow')(params)\n      : params[1]\n      ? { [`overflow-${params[0]}`]: params[1] }\n      : propertyValue()(params, context, id),\n\n  transform: (params) =>\n    params[0] === 'none'\n      ? { transform: 'none' }\n      : {\n          '--tw-translate-x': '0',\n          '--tw-translate-y': '0',\n          '--tw-rotate': '0',\n          '--tw-skew-x': '0',\n          '--tw-skew-y': '0',\n          '--tw-scale-x': '1',\n          '--tw-scale-y': '1',\n          transform: transform(params[0] === 'gpu'),\n        },\n\n  // .rotate-0\t--transform-rotate: 0;\n  // .rotate-1\t--transform-rotate: 1deg;\n  rotate: (params, { theme }) =>\n    (_ = theme('rotate', params)) && {\n      '--tw-rotate': _,\n      transform: [`rotate(${_})`, transform()],\n    },\n\n  scale: transformXYFunction,\n  translate: transformXYFunction,\n  skew: transformXYFunction,\n\n  // .gap-0\tgap: 0;\n  // .gap-1\tgap: 0.25rem;\n  // .gap-px\tgap: 1px;\n  // .gap-x-0\tcolumn-gap: 0;\n  // .gap-x-1\tcolumn-gap: 0.25rem;\n  gap: (params, context, id) =>\n    (_ = ({ x: 'column', y: 'row' } as Record<string, string | undefined>)[params[0]])\n      ? { [_ + 'Gap']: context.theme('gap', tail(params)) }\n      : themeProperty('gap')(params, context, id),\n\n  // .stroke-current\tstroke: currentColor;\n  // stroke-0\tstroke-width: 0;\n  // .stroke-1\tstroke-width: 1;\n  stroke: (params, context, id) =>\n    (_ = context.theme('stroke', params, '' /* Optional */))\n      ? { stroke: _ }\n      : themeProperty('strokeWidth')(params, context, id),\n\n  // .outline-none\toutline: 2px solid transparent; outline-offset: 2px;\n  // .outline-white\toutline: 2px dotted white; outline-offset: 2px;\n  outline: (params, { theme }) =>\n    (_ = theme('outline', params)) && {\n      outline: _[0],\n      outlineOffset: _[1],\n    },\n\n  break(params) {\n    switch (params[0]) {\n      case 'normal':\n        return {\n          wordBreak: 'normal',\n          overflowWrap: 'normal',\n        }\n      case 'words':\n        return { overflowWrap: 'break-word' }\n      case 'all':\n        return { wordBreak: 'break-all' }\n    }\n  },\n\n  text(params, { theme }, id) {\n    switch (params[0]) {\n      case 'left':\n      case 'center':\n      case 'right':\n      case 'justify':\n        return { textAlign: params[0] }\n      case 'uppercase':\n      case 'lowercase':\n      case 'capitalize':\n        return textTransform([], _, params[0])\n      case 'opacity':\n        return opacityProperty(params, theme, id)\n    }\n\n    const fontSize = theme('fontSize', params, '' /* Optional */)\n\n    if (fontSize) {\n      return typeof fontSize == 'string'\n        ? { fontSize }\n        : {\n            fontSize: fontSize[0],\n            ...(typeof fontSize[1] == 'string' ? { lineHeight: fontSize[1] } : fontSize[1]),\n          }\n    }\n\n    return withOpacityFallback('color', 'text', theme('textColor', params) as string)\n  },\n\n  // eslint-disable-next-line complexity\n  bg(params, { theme }, id) {\n    switch (params[0]) {\n      case 'fixed':\n      case 'local':\n      case 'scroll':\n        return propertyValue('backgroundAttachment', ',')(params)\n\n      case 'bottom':\n      case 'center':\n      case 'left':\n      case 'right':\n      case 'top':\n        return propertyValue('backgroundPosition', ' ')(params)\n\n      case 'no':\n        return params[1] === 'repeat' && propertyValue('backgroundRepeat')(params)\n\n      case 'auto':\n      case 'cover':\n      case 'contain':\n        return propertyValue('backgroundSize')(params)\n\n      case 'repeat':\n        return includes('xy', params[1])\n          ? propertyValue('backgroundRepeat')(params)\n          : { 'background-repeat': params[1] || params[0] }\n\n      case 'opacity':\n        return opacityProperty(params, theme, id, 'background')\n\n      case 'clip':\n        return { backgroundClip: params[1] + (params[1] === 'text' ? '' : '-box') }\n\n      // .bg-gradient-to-r => linear-gradient(to right, ...)\n      // .bg-gradient-to-r => linear-gradient(to right, ...)\n      case 'gradient':\n        if (params[1] === 'to' && (_ = expandEdges(params[2]))) {\n          return {\n            backgroundImage: `linear-gradient(to ${join(_, ' ')},var(--tw-gradient-stops))`,\n          }\n        }\n    }\n\n    return (_ = theme('backgroundImage', params, '' /* Optional */))\n      ? { backgroundImage: _ }\n      : withOpacityFallback('backgroundColor', 'bg', theme('backgroundColor', params) as string)\n  },\n\n  // .from-purple-400\n  from: (params, { theme }) =>\n    (_ = theme('gradientColorStops', params)) && {\n      '--tw-gradient-from': _,\n      '--tw-gradient-stops': `var(--tw-gradient-from),var(--tw-gradient-to,${transparentTo(\n        _ as string,\n      )})`,\n    },\n\n  // .via-pink-500\n  via: (params, { theme }) =>\n    (_ = theme('gradientColorStops', params)) && {\n      '--tw-gradient-stops': `var(--tw-gradient-from),${_},var(--tw-gradient-to,${transparentTo(\n        _ as string,\n      )})`,\n    },\n\n  // .to-red-500\n  to: (params, { theme }) => ({\n    '--tw-gradient-to': theme('gradientColorStops', params),\n  }),\n\n  // .border\tborder-width: 1px;\n  // .border-0\tborder-width: 0;\n  // .border-2\tborder-width: 2px;\n  // .border\tborder-width: 1px;\n  // .border-t\tborder-top-width: 1px;\n  // .border-t-0\tborder-top-width: 0px;\n  // .border-t-xs\n  border: (params, context, id) =>\n    expandEdges(params[0])\n      ? edges(context.theme('borderWidth', tail(params)), params[0], 'border', 'width')\n      : border(params, context, id),\n\n  // .divide-x\n  // .divide-x-8\n  divide: (params, context, id) =>\n    (_ =\n      reversableEdge(params, context, id, 'divideWidth', 'border', 'width') ||\n      border(params, context, id)) && {\n      '&>:not([hidden])~:not([hidden])': _ as CSSRules,\n    },\n\n  space: (params, context, id) =>\n    (_ = reversableEdge(params, context, id, 'space', 'margin')) && {\n      '&>:not([hidden])~:not([hidden])': _,\n    },\n\n  placeholder: (params, { theme }, id) =>\n    (_ =\n      params[0] === 'opacity'\n        ? opacityProperty(params, theme, id)\n        : withOpacityFallback(\n            'color',\n            'placeholder',\n            theme('placeholderColor', params) as string,\n          )) && {\n      '&::placeholder': _,\n    },\n\n  // .shadow\tbox-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);\n  // .shadow-md\tbox-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  // .shadow-none\tbox-shadow: none;\n  shadow: (params, { theme }) =>\n    (_ = theme('boxShadow', params)) && {\n      ':global': {\n        '*': {\n          '--tw-shadow': '0 0 transparent',\n        },\n      },\n      '--tw-shadow': _ === 'none' ? '0 0 transparent' : _,\n      // Fallback first, then modern with ring-* support\n      boxShadow: [\n        _,\n        `var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow)`,\n      ],\n    },\n\n  animate: (params, { theme, tag }) => {\n    if (($ = theme('animation', params))) {\n      // Try to auto inject keyframes\n      const parts = $.split(' ')\n\n      // Try to find a keyframe defintion in the theme using the first part\n      // Provide a default (__ = {}) and check if that is returned\n      if ((_ = theme('keyframes', parts[0], (__ = {}))) !== __) {\n        // Use a hashed named for the keyframes\n        return (\n          ($ = tag(parts[0])) && {\n            animation: $ + ' ' + join(tail(parts), ' '),\n            ['@keyframes ' + $]: _,\n          }\n        )\n      }\n\n      return { animation: $ }\n    }\n  },\n\n  // From theme.ringWidth\n  // .ring\n  // .ring-0\n  // .ring-inset\n  //\n  // From theme.colors\n  // .ring-current\n  // .ring-transparent\n  // .ring-gray-100\n  //\n  // From theme.opacity\n  // .ring-opacity-50\n  //\n  // From theme.ringOffsetWidth\n  // .ring-offset -> 2px\n  // .ring-offset-8 -> 8px\n  ring(params, { theme }, id) {\n    switch (params[0]) {\n      case 'inset':\n        return { '--tw-ring-inset': 'inset' }\n\n      case 'opacity':\n        return opacityProperty(params, theme, id)\n\n      case 'offset':\n        // Either width or color\n        return (_ = theme('ringOffsetWidth', tail(params), '' /* Optional */))\n          ? {\n              '--tw-ring-offset-width': _,\n            }\n          : {\n              '--tw-ring-offset-color': theme('ringOffsetColor', tail(params)),\n            }\n    }\n\n    // Either width or color\n    return (_ = theme('ringWidth', params, '' /* Optional */))\n      ? {\n          // A width\n          '--tw-ring-offset-shadow': `var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)`,\n          '--tw-ring-shadow': `var(--tw-ring-inset) 0 0 0 calc(${_} + var(--tw-ring-offset-width)) var(--tw-ring-color)`,\n          'box-shadow': `var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent)`,\n\n          ':global': {\n            '*': {\n              '--tw-ring-inset': 'var(--tw-empty,/*!*/ /*!*/)',\n              '--tw-ring-offset-width': theme('ringOffsetWidth', '', '0px'),\n              '--tw-ring-offset-color': theme('ringOffsetColor', '', '#fff'),\n              '--tw-ring-color': asRGBA(\n                theme('ringColor', '', '#93c5fd') as string,\n                'ring-opacity',\n                theme('ringOpacity', '', '0.5'),\n              ),\n              '--tw-ring-offset-shadow': '0 0 transparent',\n              '--tw-ring-shadow': '0 0 transparent',\n            },\n          },\n        }\n      : {\n          // A color\n          '--tw-ring-opacity': '1',\n          '--tw-ring-color': asRGBA(theme('ringColor', params) as string, 'ring-opacity'),\n        }\n  },\n\n  object: (params) =>\n    includes(['contain', 'cover', 'fill', 'none', 'scale'], params[0])\n      ? propertyValue('objectFit')(params)\n      : propertyValue('objectPosition', ' ')(params),\n\n  list: (params) =>\n    propertyValue(\n      includes(['inside', 'outside'], params[0]) ? 'listStylePosition' : 'listStyleType',\n    )(params),\n\n  // .rounded\tborder-radius: 0.25rem;\n  // .rounded-5\tborder-radius: 5px;\n  // .rounded-md\tborder-radius: 0.375rem;\n  // .rounded-lg\tborder-radius: 0.5rem;\n  // .rounded-xl\tborder-radius: 0.75rem;\n  // .rounded-2xl\tborder-radius: 1rem;\n  // .rounded-3xl\tborder-radius: 1.5rem;\n  // .rounded-full\tborder-radius: 9999px;\n  // .rounded-t-none\tborder-top-left-radius: 0px; border-top-right-radius: 0px;\n  // .rounded-t-4\tborder-radius: 4px;\n  rounded: (params, context, id) =>\n    corners(\n      context.theme('borderRadius', tail(params), '' /* Optional */),\n      params[0],\n      'border',\n      'radius',\n    ) || themeProperty('borderRadius')(params, context, id),\n\n  'transition-none': { 'transition-property': 'none' },\n\n  transition: (params, { theme }) => ({\n    transitionProperty: theme('transitionProperty', params),\n    transitionTimingFunction: theme('transitionTimingFunction', ''),\n    transitionDuration: theme('transitionDuration', ''),\n  }),\n\n  container: (params, { theme }) => {\n    const { screens = theme('screens'), center, padding } = theme('container') as ThemeContainer\n\n    const paddingFor = (screen: string): CSSRules =>\n      (_ = padding && (typeof padding == 'string' ? padding : padding[screen] || padding.DEFAULT))\n        ? {\n            paddingRight: _,\n            paddingLeft: _,\n          }\n        : {}\n\n    return Object.keys(screens).reduce(\n      (rules, screen) => {\n        if (($ = screens[screen]) && typeof $ == 'string') {\n          rules[buildMediaQuery($)] = {\n            '&': {\n              'max-width': $,\n              ...paddingFor(screen),\n            },\n          }\n        }\n\n        return rules\n      },\n      {\n        width: '100%',\n        ...(center ? { marginRight: 'auto', marginLeft: 'auto' } : {}),\n        ...paddingFor('xs'),\n      } as CSSRules,\n    )\n  },\n}\n/* eslint-enable no-return-assign, no-cond-assign, @typescript-eslint/consistent-type-assertions */\n", "// Source: https://github.com/sindresorhus/modern-normalize/blob/master/modern-normalize.css\n// License: MIT\n\n// Source: https://github.com/tailwindlabs/tailwindcss/blob/master/src/plugins/css/preflight.css\n// License: MIT\n\nimport type { CSSRules, ThemeResolver } from '../types'\n\n/**\n * Manually forked from SUIT CSS Base: https://github.com/suitcss/base\n * A thin layer on top of normalize.css that provides a starting point more\n * suitable for web applications.\n */\nexport const createPreflight = (theme: ThemeResolver): CSSRules => ({\n  /**\n   * Use a more readable tab size (opinionated).\n   */\n  ':root': { tabSize: 4 },\n\n  /**\n   * Removes the default spacing and border for appropriate elements.\n   */\n  'body,blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre,fieldset,ol,ul': { margin: '0' },\n\n  button: { backgroundColor: 'transparent', backgroundImage: 'none' },\n\n  /**\n   * Correct the inability to style clickable types in iOS and Safari.\n   */\n  'button,[type=\"button\"],[type=\"reset\"],[type=\"submit\"]': { WebkitAppearance: 'button' },\n\n  /**\n   * Work around a Firefox/IE bug where the transparent `button` background\n   * results in a loss of the default `button` focus styles.\n   */\n  'button:focus': { outline: ['1px dotted', '5px auto -webkit-focus-ring-color'] },\n\n  /**\n   * Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.\n   */\n  'fieldset,ol,ul,legend': { padding: '0' },\n\n  'ol,ul': { listStyle: 'none' },\n\n  /**\n   * 1. Use Tailwind's default \"normal\" line-height so the user isn't forced\n   *    to override it to ensure consistency even when using the default theme.\n   * 2. Prevent adjustments of font size after orientation changes in iOS.\n   * 3. Use the user's configured `sans` font-family (with Tailwind's default\n   *    sans-serif font stack as a fallback) as a sane default.\n   */\n  html: {\n    lineHeight: '1.5',\n    WebkitTextSizeAdjust: '100%',\n    fontFamily: theme('fontFamily.sans', 'ui-sans-serif,system-ui,sans-serif'),\n  },\n\n  /**\n   * 1. Remove the margin in all browsers.\n   * 2. Inherit font-family and line-height from `html` so users can set them as\n   * a class directly on the `html` element.\n   */\n  body: { fontFamily: 'inherit', lineHeight: 'inherit' },\n\n  /**\n   * 1. Prevent padding and border from affecting element width.\n   *\n   *    We used to set this in the html element and inherit from\n   *    the parent element for everything else. This caused issues\n   *    in shadow-dom-enhanced elements like <details> where the content\n   *    is wrapped by a div with box-sizing set to `content-box`.\n   *\n   *    https://github.com/mozdevs/cssremedy/issues/4\n   *\n   *\n   * 2. Allow adding a border to an element by just adding a border-width.\n   *\n   *    By default, the way the browser specifies that an element should have no\n   *    border is by setting it's border-style to `none` in the user-agent\n   *    stylesheet.\n   *\n   *    In order to easily add borders to elements by just setting the `border-width`\n   *    property, we change the default border-style for all elements to `solid`, and\n   *    use border-width to hide them instead. This way our `border` utilities only\n   *    need to set the `border-width` property instead of the entire `border`\n   *    shorthand, making our border utilities much more straightforward to compose.\n   *\n   *    https://github.com/tailwindcss/tailwindcss/pull/116\n   */\n  '*,::before,::after': {\n    boxSizing: 'border-box',\n    border: `0 solid ${theme('borderColor.DEFAULT', 'currentColor')}`,\n  },\n\n  /*\n   * 1. Add the correct height in Firefox.\n   * 2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n   * 3. Ensure horizontal rules are visible by default\n   */\n  hr: { height: '0', color: 'inherit', borderTopWidth: '1px' },\n\n  /**\n   * Undo the `border-style: none` reset that Normalize applies to images so that\n   * our `border-<width>` utilities have the expected effect.\n   *\n   * The Normalize reset is unnecessary for us since we default the border-width\n   * to 0 on all elements.\n   *\n   * https://github.com/tailwindcss/tailwindcss/issues/362\n   */\n  img: { borderStyle: 'solid' },\n\n  textarea: { resize: 'vertical' },\n\n  'input::placeholder,textarea::placeholder': {\n    opacity: '1',\n    color: theme('placeholderColor.DEFAULT', theme('colors.gray.400', '#a1a1aa')),\n  },\n\n  'button,[role=\"button\"]': { cursor: 'pointer' },\n\n  /**\n   * 1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n   * 2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n   */\n  table: { textIndent: '0', borderColor: 'inherit', borderCollapse: 'collapse' },\n\n  'h1,h2,h3,h4,h5,h6': { fontSize: 'inherit', fontWeight: 'inherit' },\n\n  /**\n   * Reset links to optimize for opt-in styling instead of\n   * opt-out.\n   */\n  a: { color: 'inherit', textDecoration: 'inherit' },\n\n  /**\n   * 1. Change the font styles in all browsers.\n   * 2. Remove the margin in Firefox and Safari.\n   * Reset form element properties that are easy to forget to\n   * style explicitly so you don't inadvertently introduce\n   * styles that deviate from your design system. These styles\n   * supplement a partial reset that is already applied by\n   * normalize.css.\n   */\n  'button,input,optgroup,select,textarea': {\n    fontFamily: 'inherit',\n    fontSize: '100%',\n    margin: '0',\n    padding: '0',\n    lineHeight: 'inherit',\n    color: 'inherit',\n  },\n\n  /**\n   * Remove the inheritance of text transform in Edge and Firefox.\n   * 1. Remove the inheritance of text transform in Firefox.\n   */\n  'button,select': { textTransform: 'none' },\n\n  /**\n   * Remove the inner border and padding in Firefox.\n   */\n  '::-moz-focus-inner': { borderStyle: 'none', padding: '0' },\n\n  /**\n   * Restore the focus styles unset by the previous rule.\n   */\n  ':-moz-focusring': { outline: '1px dotted ButtonText' },\n\n  /**\n   * Remove the additional ':invalid' styles in Firefox.\n   * See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737\n   */\n  ':-moz-ui-invalid': { boxShadow: 'none' },\n\n  /**\n   * Add the correct vertical alignment in Chrome and Firefox.\n   */\n  progress: { verticalAlign: 'baseline' },\n\n  /**\n   * Correct the cursor style of increment and decrement buttons in Safari.\n   */\n  '::-webkit-inner-spin-button,::-webkit-outer-spin-button': { height: 'auto' },\n\n  /**\n   * 1. Correct the odd appearance in Chrome and Safari.\n   * 2. Correct the outline style in Safari.\n   */\n  '[type=\"search\"]': { WebkitAppearance: 'textfield', outlineOffset: '-2px' },\n\n  /**\n   * Remove the inner padding in Chrome and Safari on macOS.\n   */\n  '::-webkit-search-decoration': { WebkitAppearance: 'none' },\n\n  /**\n   * 1. Correct the inability to style clickable types in iOS and Safari.\n   * 2. Change font properties to 'inherit' in Safari.\n   */\n  '::-webkit-file-upload-button': { WebkitAppearance: 'button', font: 'inherit' },\n\n  /*\n   * Add the correct display in Chrome and Safari.\n   */\n  summary: { display: 'list-item' },\n\n  /**\n   * Add the correct text decoration in Chrome, Edge, and Safari.\n   */\n  'abbr[title]': { textDecoration: 'underline dotted' },\n\n  /**\n   * Add the correct font weight in Edge and Safari.\n   */\n  'b,strong': { fontWeight: 'bolder' },\n\n  /**\n   * 1. Use the configured 'mono' font family for elements that\n   * are expected to be rendered with a monospace font, falling\n   * back to the system monospace stack if there is no configured\n   * 'mono' font family.\n   * 2. Correct the odd 'em' font sizing in all browsers.\n   */\n  'pre,code,kbd,samp': {\n    fontFamily: theme('fontFamily', 'mono', 'ui-monospace,monospace'),\n    fontSize: '1em',\n  },\n\n  /**\n   * Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.\n   */\n  'sub,sup': { fontSize: '75%', lineHeight: '0', position: 'relative', verticalAlign: 'baseline' },\n\n  sub: { bottom: '-0.25em' },\n\n  sup: { top: '-0.5em' },\n\n  /**\n   * Make replaced elements `display: block` by default as that's\n   * the behavior you want almost all of the time. Inspired by\n   * CSS Remedy, with `svg` added as well.\n   *\n   * https://github.com/mozdevs/cssremedy/issues/14\n   */\n  'img,svg,video,canvas,audio,iframe,embed,object': { display: 'block', verticalAlign: 'middle' },\n\n  /**\n   * Constrain images and videos to the parent width and preserve\n   * their instrinsic aspect ratio.\n   *\n   * https://github.com/mozdevs/cssremedy/issues/14\n   */\n  'img,video': { maxWidth: '100%', height: 'auto' },\n})\n", "export const coreVariants: Record<string, string> = {\n  dark: '@media (prefers-color-scheme:dark)',\n  sticky: '@supports ((position: -webkit-sticky) or (position:sticky))',\n  'motion-reduce': '@media (prefers-reduced-motion:reduce)',\n  'motion-safe': '@media (prefers-reduced-motion:no-preference)',\n  first: '&:first-child',\n  last: '&:last-child',\n  even: '&:nth-child(2n)',\n  odd: '&:nth-child(odd)',\n  children: '&>*',\n  siblings: '&~*',\n  sibling: '&+*',\n  override: '&&',\n}\n", "export const STYLE_ELEMENT_ID = '__twind' as const\n\ndeclare global {\n  interface Window {\n    [STYLE_ELEMENT_ID]?: HTMLStyleElement\n  }\n}\n\nexport const getStyleElement = (nonce?: string): HTMLStyleElement => {\n  // Hydrate existing style element if available\n  // self[id] - every element with an id is available through the global object\n  // eslint-disable-next-line no-restricted-globals\n  let element = self[STYLE_ELEMENT_ID]\n\n  if (!element) {\n    // Create a new one otherwise\n    element = document.head.appendChild(document.createElement('style'))\n\n    element.id = STYLE_ELEMENT_ID\n    nonce && (element.nonce = nonce)\n\n    // Avoid Edge bug where empty style elements doesn't create sheets\n    element.appendChild(document.createTextNode(''))\n  }\n\n  return element\n}\n", "// Based on https://github.com/kripod/otion/blob/main/packages/otion/src/injectors.ts\n// License MIT\nimport type { SheetConfig, Sheet } from '../types'\nimport { noop } from '../internal/util'\nimport { getStyleElement } from '../internal/dom'\n\n/**\n * Creates an sheet which inserts style rules through the CSS Object Model.\n */\nexport const cssomSheet = ({\n  nonce,\n  target = getStyleElement(nonce).sheet as CSSStyleSheet,\n}: SheetConfig<CSSStyleSheet> = {}): Sheet<CSSStyleSheet> => {\n  const offset = target.cssRules.length\n\n  return {\n    target,\n    insert: (rule, index) => target.insertRule(rule, offset + index),\n  }\n}\n\n/**\n * An sheet placeholder which performs no operations. Useful for avoiding errors in a non-browser environment.\n */\nexport const voidSheet = (): Sheet<null> => ({\n  target: null,\n  insert: noop,\n})\n", "import type { Mode } from '../types'\n\nimport { join, noop } from '../internal/util'\n\nexport const mode = (report: (message: string) => void): Mode => ({\n  unknown(section, key = [], optional, context) {\n    if (!optional) {\n      // TODO hint about possible values, did you mean ...\n      this.report({ id: 'UNKNOWN_THEME_VALUE', key: join([section, ...key], '.') }, context)\n    }\n  },\n\n  report({ id, ...info }) {\n    const message = `[${id}] ${JSON.stringify(info)}`\n    // Generate a stacktrace that starts at callee site\n    const stack = (new Error(message).stack || message).split('at ')\n\n    // Drop all frames until we hit the first `tw` or `setup` call\n    // We are using splice(1, 1) to keep the message header - this includes line break and \"at \" indentation\n    for (\n      let frame: string | undefined;\n      (frame = stack.splice(1, 1)[0]) && !/(^|\\.)(tw|setup) /.test(frame);\n\n    ) {\n      /* no-op */\n    }\n\n    // Put it back together\n    return report(stack.join('at '))\n  },\n})\n\nexport const warn = mode((message) => console.warn(message))\n\nexport const strict = mode((message) => {\n  throw new Error(message)\n})\n\nexport const silent = mode(noop)\n", "import type { Prefixer } from '../types'\n\nimport { cssPropertyAlias, cssPropertyPrefixFlags, cssValuePrefixFlags } from 'style-vendorizer'\n\nexport const noprefix: Prefixer = (property: string, value: string, important?: boolean): string =>\n  `${property}:${value}${important ? ' !important' : ''}`\n\nexport const autoprefix: Prefixer = (\n  property: string,\n  value: string,\n  important?: boolean,\n): string => {\n  let cssText = ''\n\n  // Resolve aliases, e.g. `gap` -> `grid-gap`\n  const propertyAlias = cssPropertyAlias(property)\n  if (propertyAlias) cssText += `${noprefix(propertyAlias, value, important)};`\n\n  // Prefix properties, e.g. `backdrop-filter` -> `-webkit-backdrop-filter`\n  let flags = cssPropertyPrefixFlags(property)\n  if (flags & 0b001) cssText += `-webkit-${noprefix(property, value, important)};`\n  if (flags & 0b010) cssText += `-moz-${noprefix(property, value, important)};`\n  if (flags & 0b100) cssText += `-ms-${noprefix(property, value, important)};`\n\n  // Prefix values, e.g. `position: \"sticky\"` -> `position: \"-webkit-sticky\"`\n  // Notice that flags don't overlap and property prefixing isn't needed here\n  flags = cssValuePrefixFlags(property, value)\n  if (flags & 0b001) cssText += `${noprefix(property, `-webkit-${value}`, important)};`\n  if (flags & 0b010) cssText += `${noprefix(property, `-moz-${value}`, important)};`\n  if (flags & 0b100) cssText += `${noprefix(property, `-ms-${value}`, important)};`\n\n  /* Include the standardized declaration last */\n  /* https://css-tricks.com/ordering-css3-properties/ */\n  cssText += noprefix(property, value, important)\n\n  return cssText\n}\n", "import type {\n  Theme,\n  ThemeColor,\n  ThemeConfiguration,\n  ThemeResolver,\n  ThemeSectionType,\n  ThemeSectionResolver,\n  ThemeSectionResolverContext,\n  ThemeHelper,\n} from '../types'\n\nimport { join, tail, includes } from '../internal/util'\nimport type { Context } from 'uvu'\nimport { directive } from './directive'\n\n// '1/2': '50%',\n// '1/3': '33.333333%',\n// '2/3': '66.666667%',\n// '1/4': '25%',\n// '2/4': '50%',\n// '3/4': '75%',\n// '1/5': '20%',\n// '2/5': '40%',\n// '3/5': '60%',\n// '4/5': '80%',\n// '1/6': '16.666667%',\n// '2/6': '33.333333%',\n// '3/6': '50%',\n// '4/6': '66.666667%',\n// '5/6': '83.333333%',\nconst ratios = (start: number, end: number): Record<string, string> => {\n  const result: Record<string, string> = {}\n\n  do {\n    for (let dividend = 1; dividend < start; dividend++) {\n      // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n      result[`${dividend}/${start}`] = Number(((dividend / start) * 100).toFixed(6)) + '%'\n    }\n  } while (++start <= end)\n\n  return result\n}\n\n// 0: '0px',\n// 2: '2px',\n// 4: '4px',\n// 8: '8px',\nconst exponential = (stop: number, unit: string, start = 0): Record<string, string> => {\n  const result: Record<string, string> = {}\n\n  for (; start <= stop; start = start * 2 || 1) {\n    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n    result[start] = start + unit\n  }\n\n  return result\n}\n\n// 3: '.75rem',\n// 4: '1rem',\n// 5: '1.25rem',\n// 6: '1.5rem',\n// 7: '1.75rem',\n// 8: '2rem',\n// 9: '2.25rem',\n// 10: '2.5rem',\nconst linear = (\n  stop: number,\n  unit = '',\n  divideBy = 1,\n  start = 0,\n  step = 1,\n  // eslint-disable-next-line max-params\n): Record<string, string> => {\n  const result: Record<string, string> = {}\n\n  for (; start <= stop; start += step) {\n    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n    result[start] = start / divideBy + unit\n  }\n\n  return result\n}\n\nconst alias = <Section extends keyof Theme>(\n  section: Section,\n): ThemeSectionResolver<ThemeSectionType<Theme[Section]>> => (theme) => theme(section)\n\nconst themeFactory = (args: Parameters<ThemeResolver>, { theme }: Context) => theme(...args)\n\nexport const theme = ((...args: Parameters<ThemeResolver>): ReturnType<ThemeHelper> =>\n  directive(themeFactory, args)) as ThemeHelper\n\nexport const defaultTheme: Theme = {\n  screens: {\n    sm: '640px',\n    md: '768px',\n    lg: '1024px',\n    xl: '1280px',\n    '2xl': '1536px',\n  },\n  colors: {\n    transparent: 'transparent',\n    current: 'currentColor',\n\n    // black: colors.black,\n    black: '#000',\n\n    // white: colors.white,\n    white: '#fff',\n\n    // gray: colors.coolGray,\n    gray: {\n      50: '#f9fafb',\n      100: '#f3f4f6',\n      200: '#e5e7eb',\n      300: '#d1d5db',\n      400: '#9ca3af',\n      500: '#6b7280',\n      600: '#4b5563',\n      700: '#374151',\n      800: '#1f2937',\n      900: '#111827',\n    },\n\n    // red: colors.red,\n    red: {\n      50: '#fef2f2',\n      100: '#fee2e2',\n      200: '#fecaca',\n      300: '#fca5a5',\n      400: '#f87171',\n      500: '#ef4444',\n      600: '#dc2626',\n      700: '#b91c1c',\n      800: '#991b1b',\n      900: '#7f1d1d',\n    },\n\n    // yellow: colors.amber,\n    yellow: {\n      50: '#fffbeb',\n      100: '#fef3c7',\n      200: '#fde68a',\n      300: '#fcd34d',\n      400: '#fbbf24',\n      500: '#f59e0b',\n      600: '#d97706',\n      700: '#b45309',\n      800: '#92400e',\n      900: '#78350f',\n    },\n\n    // green: colors.emerald,\n    green: {\n      50: '#ecfdf5',\n      100: '#d1fae5',\n      200: '#a7f3d0',\n      300: '#6ee7b7',\n      400: '#34d399',\n      500: '#10b981',\n      600: '#059669',\n      700: '#047857',\n      800: '#065f46',\n      900: '#064e3b',\n    },\n\n    // blue: colors.blue,\n    blue: {\n      50: '#eff6ff',\n      100: '#dbeafe',\n      200: '#bfdbfe',\n      300: '#93c5fd',\n      400: '#60a5fa',\n      500: '#3b82f6',\n      600: '#2563eb',\n      700: '#1d4ed8',\n      800: '#1e40af',\n      900: '#1e3a8a',\n    },\n\n    // indigo: colors.indigo,\n    indigo: {\n      50: '#eef2ff',\n      100: '#e0e7ff',\n      200: '#c7d2fe',\n      300: '#a5b4fc',\n      400: '#818cf8',\n      500: '#6366f1',\n      600: '#4f46e5',\n      700: '#4338ca',\n      800: '#3730a3',\n      900: '#312e81',\n    },\n\n    // purple: colors.violet,\n    purple: {\n      50: '#f5f3ff',\n      100: '#ede9fe',\n      200: '#ddd6fe',\n      300: '#c4b5fd',\n      400: '#a78bfa',\n      500: '#8b5cf6',\n      600: '#7c3aed',\n      700: '#6d28d9',\n      800: '#5b21b6',\n      900: '#4c1d95',\n    },\n\n    // pink: colors.pink,\n    pink: {\n      50: '#fdf2f8',\n      100: '#fce7f3',\n      200: '#fbcfe8',\n      300: '#f9a8d4',\n      400: '#f472b6',\n      500: '#ec4899',\n      600: '#db2777',\n      700: '#be185d',\n      800: '#9d174d',\n      900: '#831843',\n    },\n  },\n\n  spacing: {\n    px: '1px',\n    0: '0px',\n    ...linear(4, 'rem', 4, 0.5, 0.5),\n    // 0.5: '0.125rem',\n    // 1: '0.25rem',\n    // 1.5: '0.375rem',\n    // 2: '0.5rem',\n    // 2.5: '0.625rem',\n    // 3: '0.75rem',\n    // 3.5: '0.875rem',\n    // 4: '1rem',\n    ...linear(12, 'rem', 4, 5),\n    // 5: '1.25rem',\n    // 6: '1.5rem',\n    // 7: '1.75rem',\n    // 8: '2rem',\n    // 9: '2.25rem',\n    // 10: '2.5rem',\n    // 11: '2.75rem',\n    // 12: '3rem',\n    14: '3.5rem',\n    ...linear(64, 'rem', 4, 16, 4),\n    // 16: '4rem',\n    // 20: '5rem',\n    // 24: '6rem',\n    // 28: '7rem',\n    // 32: '8rem',\n    // 36: '9rem',\n    // 40: '10rem',\n    // 44: '11rem',\n    // 48: '12rem',\n    // 52: '13rem',\n    // 56: '14rem',\n    // 60: '15rem',\n    // 64: '16rem',\n    72: '18rem',\n    80: '20rem',\n    96: '24rem',\n  },\n\n  durations: {\n    75: '75ms',\n    100: '100ms',\n    150: '150ms',\n    200: '200ms',\n    300: '300ms',\n    500: '500ms',\n    700: '700ms',\n    1000: '1000ms',\n  },\n\n  animation: {\n    none: 'none',\n    spin: 'spin 1s linear infinite',\n    ping: 'ping 1s cubic-bezier(0, 0, 0.2, 1) infinite',\n    pulse: 'pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite',\n    bounce: 'bounce 1s infinite',\n  },\n\n  backgroundColor: alias('colors'),\n  backgroundImage: {\n    none: 'none',\n    // These are built-in\n    // 'gradient-to-t': 'linear-gradient(to top, var(--tw-gradient-stops))',\n    // 'gradient-to-tr': 'linear-gradient(to top right, var(--tw-gradient-stops))',\n    // 'gradient-to-r': 'linear-gradient(to right, var(--tw-gradient-stops))',\n    // 'gradient-to-br': 'linear-gradient(to bottom right, var(--tw-gradient-stops))',\n    // 'gradient-to-b': 'linear-gradient(to bottom, var(--tw-gradient-stops))',\n    // 'gradient-to-bl': 'linear-gradient(to bottom left, var(--tw-gradient-stops))',\n    // 'gradient-to-l': 'linear-gradient(to left, var(--tw-gradient-stops))',\n    // 'gradient-to-tl': 'linear-gradient(to top left, var(--tw-gradient-stops))',\n  },\n  backgroundOpacity: alias('opacity'),\n  borderColor: (theme) => ({\n    ...theme('colors'),\n    DEFAULT: theme('colors.gray.200', 'currentColor'),\n  }),\n  borderOpacity: alias('opacity'),\n  borderRadius: {\n    none: '0px',\n    sm: '0.125rem',\n    DEFAULT: '0.25rem',\n    md: '0.375rem',\n    lg: '0.5rem',\n    xl: '0.75rem',\n    '2xl': '1rem',\n    '3xl': '1.5rem',\n    full: '9999px',\n  },\n  borderWidth: {\n    DEFAULT: '1px',\n    ...exponential(8, 'px'),\n    // 0: '0px',\n    // 2: '2px',\n    // 4: '4px',\n    // 8: '8px',\n  },\n  boxShadow: {\n    sm: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',\n    DEFAULT: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',\n    md: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\n    lg: '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',\n    xl: '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',\n    '2xl': '0 25px 50px -12px rgba(0, 0, 0, 0.25)',\n    inner: 'inset 0 2px 4px 0 rgba(0, 0, 0, 0.06)',\n    none: 'none',\n  },\n  container: {},\n  divideColor: alias('borderColor'),\n  divideOpacity: alias('borderOpacity'),\n  divideWidth: alias('borderWidth'),\n  fill: { current: 'currentColor' },\n  flex: {\n    1: '1 1 0%',\n    auto: '1 1 auto',\n    initial: '0 1 auto',\n    none: 'none',\n  },\n  fontFamily: {\n    sans: 'ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\"'.split(\n      ',',\n    ),\n    serif: 'ui-serif,Georgia,Cambria,\"Times New Roman\",Times,serif'.split(','),\n    mono: 'ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace'.split(\n      ',',\n    ),\n  },\n  fontSize: {\n    xs: ['0.75rem', '1rem'],\n    sm: ['0.875rem', '1.25rem'],\n    base: ['1rem', '1.5rem'],\n    lg: ['1.125rem', '1.75rem'],\n    xl: ['1.25rem', '1.75rem'],\n    '2xl': ['1.5rem', '2rem'],\n    '3xl': ['1.875rem', '2.25rem'],\n    '4xl': ['2.25rem', '2.5rem'],\n    '5xl': ['3rem', '1'],\n    '6xl': ['3.75rem', '1'],\n    '7xl': ['4.5rem', '1'],\n    '8xl': ['6rem', '1'],\n    '9xl': ['8rem', '1'],\n  },\n  fontWeight: {\n    thin: '100',\n    extralight: '200',\n    light: '300',\n    normal: '400',\n    medium: '500',\n    semibold: '600',\n    bold: '700',\n    extrabold: '800',\n    black: '900',\n  },\n  gap: alias('spacing'),\n  gradientColorStops: alias('colors'),\n  height: (theme) => ({\n    auto: 'auto',\n    ...theme('spacing'),\n    ...ratios(2, 6),\n    // '1/2': '50%',\n    // '1/3': '33.333333%',\n    // '2/3': '66.666667%',\n    // '1/4': '25%',\n    // '2/4': '50%',\n    // '3/4': '75%',\n    // '1/5': '20%',\n    // '2/5': '40%',\n    // '3/5': '60%',\n    // '4/5': '80%',\n    // '1/6': '16.666667%',\n    // '2/6': '33.333333%',\n    // '3/6': '50%',\n    // '4/6': '66.666667%',\n    // '5/6': '83.333333%',\n    full: '100%',\n    screen: '100vh',\n  }),\n  inset: (theme) => ({\n    auto: 'auto',\n    ...theme('spacing'),\n    ...ratios(2, 4),\n    // '1/2': '50%',\n    // '1/3': '33.333333%',\n    // '2/3': '66.666667%',\n    // '1/4': '25%',\n    // '2/4': '50%',\n    // '3/4': '75%',\n    full: '100%',\n  }),\n  keyframes: {\n    spin: {\n      from: {\n        transform: 'rotate(0deg)',\n      },\n      to: {\n        transform: 'rotate(360deg)',\n      },\n    },\n    ping: {\n      '0%': {\n        transform: 'scale(1)',\n        opacity: '1',\n      },\n      '75%,100%': {\n        transform: 'scale(2)',\n        opacity: '0',\n      },\n    },\n    pulse: {\n      '0%,100%': {\n        opacity: '1',\n      },\n      '50%': {\n        opacity: '.5',\n      },\n    },\n    bounce: {\n      '0%, 100%': {\n        transform: 'translateY(-25%)',\n        animationTimingFunction: 'cubic-bezier(0.8,0,1,1)',\n      },\n      '50%': {\n        transform: 'none',\n        animationTimingFunction: 'cubic-bezier(0,0,0.2,1)',\n      },\n    },\n  },\n  letterSpacing: {\n    tighter: '-0.05em',\n    tight: '-0.025em',\n    normal: '0em',\n    wide: '0.025em',\n    wider: '0.05em',\n    widest: '0.1em',\n  },\n  lineHeight: {\n    none: '1',\n    tight: '1.25',\n    snug: '1.375',\n    normal: '1.5',\n    relaxed: '1.625',\n    loose: '2',\n    ...linear(10, 'rem', 4, 3),\n    // 3: '.75rem',\n    // 4: '1rem',\n    // 5: '1.25rem',\n    // 6: '1.5rem',\n    // 7: '1.75rem',\n    // 8: '2rem',\n    // 9: '2.25rem',\n    // 10: '2.5rem',\n  },\n  margin: (theme) => ({\n    auto: 'auto',\n    ...theme('spacing'),\n  }),\n  maxHeight: (theme) => ({\n    ...theme('spacing'),\n    full: '100%',\n    screen: '100vh',\n  }),\n  maxWidth: (theme, { breakpoints }) => ({\n    none: 'none',\n    0: '0rem',\n    xs: '20rem',\n    sm: '24rem',\n    md: '28rem',\n    lg: '32rem',\n    xl: '36rem',\n    '2xl': '42rem',\n    '3xl': '48rem',\n    '4xl': '56rem',\n    '5xl': '64rem',\n    '6xl': '72rem',\n    '7xl': '80rem',\n    full: '100%',\n    min: 'min-content',\n    max: 'max-content',\n    prose: '65ch',\n    ...breakpoints(theme('screens')),\n  }),\n  minHeight: {\n    0: '0px',\n    full: '100%',\n    screen: '100vh',\n  },\n  minWidth: {\n    0: '0px',\n    full: '100%',\n    min: 'min-content',\n    max: 'max-content',\n  },\n  opacity: {\n    ...linear(100, '', 100, 0, 10),\n    // 0: '0',\n    // 10: '0.1',\n    // 20: '0.2',\n    // 30: '0.3',\n    // 40: '0.4',\n    // 60: '0.6',\n    // 70: '0.7',\n    // 80: '0.8',\n    // 90: '0.9',\n    // 100: '1',\n    5: '0.05',\n    25: '0.25',\n    75: '0.75',\n    95: '0.95',\n  },\n  order: {\n    first: '-9999',\n    last: '9999',\n    none: '0',\n    ...linear(12, '', 1, 1),\n    // 1: '1',\n    // 2: '2',\n    // 3: '3',\n    // 4: '4',\n    // 5: '5',\n    // 6: '6',\n    // 7: '7',\n    // 8: '8',\n    // 9: '9',\n    // 10: '10',\n    // 11: '11',\n    // 12: '12',\n  },\n  outline: {\n    none: ['2px solid transparent', '2px'],\n    white: ['2px dotted white', '2px'],\n    black: ['2px dotted black', '2px'],\n  },\n  padding: alias('spacing'),\n  placeholderColor: alias('colors'),\n  placeholderOpacity: alias('opacity'),\n  ringColor: (theme) => ({\n    DEFAULT: theme('colors.blue.500', '#3b82f6'),\n    ...theme('colors'),\n  }),\n  ringOffsetColor: alias('colors'),\n  ringOffsetWidth: exponential(8, 'px'),\n  // 0: '0px',\n  // 1: '1px',\n  // 2: '2px',\n  // 4: '4px',\n  // 8: '8px',,\n  ringOpacity: (theme) => ({\n    DEFAULT: '0.5',\n    ...theme('opacity'),\n  }),\n  ringWidth: {\n    DEFAULT: '3px',\n    ...exponential(8, 'px'),\n    // 0: '0px',\n    // 1: '1px',\n    // 2: '2px',\n    // 4: '4px',\n    // 8: '8px',\n  },\n  rotate: {\n    ...exponential(2, 'deg'),\n    // 0: '0deg',\n    // 1: '1deg',\n    // 2: '2deg',\n    ...exponential(12, 'deg', 3),\n    // 3: '3deg',\n    // 6: '6deg',\n    // 12: '12deg',\n    ...exponential(180, 'deg', 45),\n    // 45: '45deg',\n    // 90: '90deg',\n    // 180: '180deg',\n  },\n  scale: {\n    0: '0',\n    50: '.5',\n    75: '.75',\n    ...linear(110, '', 100, 90, 5),\n    // 90: '.9',\n    // 95: '.95',\n    // 100: '1',\n    // 105: '1.05',\n    // 110: '1.1',\n    125: '1.25',\n    150: '1.5',\n  },\n  skew: {\n    ...exponential(2, 'deg'),\n    // 0: '0deg',\n    // 1: '1deg',\n    // 2: '2deg',\n    ...exponential(12, 'deg', 3),\n    // 3: '3deg',\n    // 6: '6deg',\n    // 12: '12deg',\n  },\n  space: alias('spacing'),\n  stroke: {\n    current: 'currentColor',\n  },\n  strokeWidth: linear(2),\n  // 0: '0',\n  // 1: '1',\n  // 2: '2',,\n  textColor: alias('colors'),\n  textOpacity: alias('opacity'),\n  transitionDuration: (theme) => ({\n    DEFAULT: '150ms',\n    ...theme('durations'),\n  }),\n  transitionDelay: alias('durations'),\n  transitionProperty: {\n    none: 'none',\n    all: 'all',\n    DEFAULT: 'background-color,border-color,color,fill,stroke,opacity,box-shadow,transform',\n    colors: 'background-color,border-color,color,fill,stroke',\n    opacity: 'opacity',\n    shadow: 'box-shadow',\n    transform: 'transform',\n  },\n  transitionTimingFunction: {\n    DEFAULT: 'cubic-bezier(0.4,0,0.2,1)',\n    linear: 'linear',\n    in: 'cubic-bezier(0.4,0,1,1)',\n    out: 'cubic-bezier(0,0,0.2,1)',\n    'in-out': 'cubic-bezier(0.4,0,0.2,1)',\n  },\n  translate: (theme) => ({\n    ...theme('spacing'),\n    ...ratios(2, 4),\n    // '1/2': '50%',\n    // '1/3': '33.333333%',\n    // '2/3': '66.666667%',\n    // '1/4': '25%',\n    // '2/4': '50%',\n    // '3/4': '75%',\n    full: '100%',\n  }),\n  width: (theme) => ({\n    auto: 'auto',\n    ...theme('spacing'),\n    ...ratios(2, 6),\n    // '1/2': '50%',\n    // '1/3': '33.333333%',\n    // '2/3': '66.666667%',\n    // '1/4': '25%',\n    // '2/4': '50%',\n    // '3/4': '75%',\n    // '1/5': '20%',\n    // '2/5': '40%',\n    // '3/5': '60%',\n    // '4/5': '80%',\n    // '1/6': '16.666667%',\n    // '2/6': '33.333333%',\n    // '3/6': '50%',\n    // '4/6': '66.666667%',\n    // '5/6': '83.333333%',\n\n    ...ratios(12, 12),\n    // '1/12': '8.333333%',\n    // '2/12': '16.666667%',\n    // '3/12': '25%',\n    // '4/12': '33.333333%',\n    // '5/12': '41.666667%',\n    // '6/12': '50%',\n    // '7/12': '58.333333%',\n    // '8/12': '66.666667%',\n    // '9/12': '75%',\n    // '10/12': '83.333333%',\n    // '11/12': '91.666667%',\n\n    screen: '100vw',\n    full: '100%',\n    min: 'min-content',\n    max: 'max-content',\n  }),\n  zIndex: {\n    auto: 'auto',\n    ...linear(50, '', 1, 0, 10),\n    // 0: '0',\n    // 10: '10',\n    // 20: '20',\n    // 30: '30',\n    // 40: '40',\n    // 50: '50',\n  },\n}\n\n// https://github.com/tailwindlabs/tailwindcss/blob/master/src/util/flattenColorPalette.js\nconst flattenColorPalette = (\n  colors: Record<string, ThemeColor>,\n  target: Record<string, ThemeColor> = {},\n  prefix: string[] = [],\n): Record<string, ThemeColor> => {\n  Object.keys(colors).forEach((property) => {\n    const value = colors[property]\n\n    if (property === 'DEFAULT') {\n      target[join(prefix)] = value\n      target[join(prefix, '.')] = value\n    }\n\n    const key = [...prefix, property]\n    target[join(key)] = value\n    target[join(key, '.')] = value\n\n    if (value && typeof value == 'object') {\n      flattenColorPalette(value, target, key)\n    }\n  }, target)\n\n  return target\n}\n\nconst resolveContext: ThemeSectionResolverContext = {\n  // ?negative: (source) =>\n  //   Object.keys(source).reduce(\n  //     (target, key) => {\n  //       if (source[key]) target['-' + key] = '-' + (source[key] as string)\n\n  //       return target\n  //     },\n  //     { ...source },\n  //   ),\n  // Stub implementation as negated values are automatically infered and do _not_ not to be in the theme\n  negative: () => ({}),\n\n  breakpoints: (screens) =>\n    Object.keys(screens)\n      .filter((key) => typeof screens[key] == 'string')\n      .reduce((target, key) => {\n        target['screen-' + key] = screens[key] as string\n\n        return target\n      }, {} as Record<string, string | undefined>),\n}\n\nexport const makeThemeResolver = (config?: ThemeConfiguration): ThemeResolver => {\n  const cache = new Map<keyof Theme, Record<string, unknown>>()\n\n  const theme = { ...defaultTheme, ...config }\n\n  const deref = (\n    theme: undefined | Partial<Theme>,\n    section: keyof Theme,\n  ): Record<string, unknown> | undefined => {\n    const base = theme && theme[section]\n\n    const value = typeof base == 'function' ? base(resolve, resolveContext) : base\n\n    return value && section === 'colors'\n      ? flattenColorPalette(value as Record<string, ThemeColor>)\n      : (value as Record<string, unknown>)\n  }\n\n  const resolve = ((section: keyof Theme, key: unknown, defaultValue: unknown): unknown => {\n    const keypath = section.split('.')\n    section = keypath[0] as keyof Theme\n\n    // theme('colors.gray.500', maybeDefault)\n    if (keypath.length > 1) {\n      defaultValue = key\n      key = join(tail(keypath), '.')\n    }\n    // else: theme('colors', 'gray.500', maybeDefault)\n\n    let base = cache.get(section)\n\n    if (!base) {\n      cache.set(\n        section,\n        (base = {\n          ...deref(theme, section),\n          ...deref(theme.extend, section),\n        }),\n      )\n    }\n\n    if (key != null) {\n      const value: unknown = base[(Array.isArray(key) ? join(key) : (key as string)) || 'DEFAULT']\n\n      return value == null\n        ? defaultValue\n        : Array.isArray(value) &&\n          // https://github.com/tailwindlabs/tailwindcss/blob/master/src/util/transformThemeValue.js\n          // only testing for sections that uses an array for values\n          !includes(['fontSize', 'outline'], section)\n        ? join(value, ',')\n        : value\n    }\n\n    return base\n  }) as ThemeResolver\n\n  return resolve\n}\n", "import type {\n  Context,\n  CSSRules,\n  Plugins,\n  Rule,\n  Falsy,\n  InlineDirective,\n  TypescriptCompat,\n} from '../types'\n\nimport { join, tail } from '../internal/util'\n\nexport const translate = (\n  plugins: Plugins,\n  context: Context,\n): ((\n  rule: Rule,\n  isTranslating?: boolean,\n) => InlineDirective | CSSRules | string | Falsy | TypescriptCompat) => (rule, isTranslating) => {\n  // If this is a inline directive - called it right away\n  if (typeof rule.d == 'function') {\n    return rule.d(context)\n  }\n\n  const parameters = rule.d.split('-')\n\n  // Bail early for already hashed class names\n  // Only if there are no variants and no negation\n  // If there are variants or negation unknown directive will be reported\n  if (!isTranslating && parameters[0] === 'tw' && rule.$ === rule.d) {\n    return rule.$\n  }\n\n  // Try to find a plugin to handle this directive\n  // example 'bg-gradient-to-r'\n  // 1. 'bg-gradient-to-r' -> parameters=['bg-gradient-to-r']\n  // 2. 'bg-gradient-to'   -> parameters=['bg-gradient-to', 'r']\n  // 4. 'bg-gradient'      -> parameters=['bg-gradient', 'to', 'r']\n  // 5. 'bg'               -> parameters=['bg', 'gradient', 'to', 'r']\n  for (let index = parameters.length; index; index--) {\n    const id = join(parameters.slice(0, index))\n\n    const plugin = plugins[id]\n\n    if (plugin) {\n      return typeof plugin == 'function'\n        ? plugin(tail(parameters, index), context, id)\n        : typeof plugin == 'string'\n        ? context[isTranslating ? 'css' : 'tw'](plugin)\n        : plugin\n    }\n  }\n}\n", "import type { Context, CSSRules, Rule, DarkMode, ThemeScreenValue } from '../types'\n\nimport { tail, escape, buildMediaQuery } from '../internal/util'\n\nlet _: RegExpExecArray | null | readonly ThemeScreenValue[] | string\n\nexport const GROUP_RE = /^:(group(?:(?!-focus).+?)*)-(.+)$/\n\n// Wraps a CSS rule object with variant at-rules and pseudo classes\n// { '.selector': {...} }\n// => { '&:hover': { '.selector': {...} } }\n// => { '@media (mind-width: ...)': { '&:hover': { '.selector': {...} } } }\nexport const decorate = (\n  darkMode: DarkMode,\n  variants: Record<string, string>,\n  { theme, tag }: Context,\n): ((translation: CSSRules, rule: Rule) => CSSRules) => {\n  // Select the wrapper for a variant\n  const applyVariant = (translation: CSSRules, variant: string): CSSRules => {\n    // Check responsive\n    if ((_ = theme('screens', tail(variant), ''))) {\n      return { [buildMediaQuery(_)]: translation }\n    }\n\n    // Dark mode\n    if (variant === ':dark' && darkMode === 'class') {\n      return { [`.dark &`]: translation }\n    }\n\n    // Groups classes like: group-focus and group-hover\n    // these need to add a marker selector with the pseudo class\n    // => '.group:focus .group-focus:selector'\n    if ((_ = GROUP_RE.exec(variant))) {\n      return { [`.${escape(tag((_ as RegExpExecArray)[1]))}:${_[2]} &`]: translation }\n    }\n\n    // Check other well known variants\n    // and fallback to pseudo class or element\n    return { [variants[tail(variant)] || '&' + variant]: translation }\n  }\n\n  // Apply variants depth-first\n  return (translation, rule) => rule.v.reduceRight(applyVariant, translation)\n}\n", "/* eslint-disable no-return-assign, no-cond-assign, no-implicit-coercion */\n\n// Based on https://github.com/kripod/otion\n// License MIT\n\n/*\nTo have a predictable styling the styles must be ordered.\n\nThis order is represented by a precedence number. The lower values\nare inserted before higher values. Meaning higher precedence styles\noverwrite lower precedence styles.\n\nEach rule has some traits that are put into a bit set which form\nthe precedence:\n\n| bits | trait                                             |\n| ---- | ------------------------------------------------- |\n| 1    | dark mode                                         |\n| 2    | layer: base = 0, components = 1, utilities = 2    |\n| 1    | screens: is this a responsive variation of a rule |\n| 5    | responsive based on min-width                     |\n| 4    | at-rules                                          |\n| 17   | pseudo and group variants                         |\n| 4    | number of declarations (descending)               |\n| 4    | greatest precedence of properties                 |\n\n**Dark Mode: 1 bit**\n\nFlag for dark mode rules.\n\n**Layer: 3 bits**\n\n- base = 0: The preflight styles and any base styles registered by plugins.\n- components = 1: Component classes and any component classes registered by plugins.\n- utilities = 2: Utility classes and any utility classes registered by plugins.\n\n**Screens: 1 bit**\n\nFlag for screen variants. They may not always have a `min-width` to be detected by _Responsive_ below.\n\n**Responsive: 5 bits**\n\nBased on extracted `min-width` value:\n\n- 576px -> 3\n- 1536px -> 9\n- 36rem -> 3\n- 96rem -> 9\n\n**At-Rules: 4 bits**\n\nBased on the count of special chars (`-:,`) within the at-rule.\n\n**Pseudo and group variants: 17 bits**\n\nEnsures predictable order of pseudo classes.\n\n- https://bitsofco.de/when-do-the-hover-focus-and-active-pseudo-classes-apply/#orderofstyleshoverthenfocusthenactive\n- https://developer.mozilla.org/docs/Web/CSS/:active#Active_links\n- https://github.com/tailwindlabs/tailwindcss/blob/master/stubs/defaultConfig.stub.js#L718\n\n**Number of declarations (descending): 4 bits**\n\nAllows single declaration styles to overwrite styles from multi declaration styles.\n\n**Greatest precedence of properties: 4 bits**\n\nEnsure shorthand properties are inserted before longhand properties; eg longhand override shorthand\n*/\n\nimport type { ThemeResolver, ThemeScreen } from '../types'\n\nimport { tail, includes, buildMediaQuery } from '../internal/util'\nimport { GROUP_RE } from './decorate'\n\n// Shared variables\nlet _: string | RegExpExecArray | null | number | ThemeScreen\n\n/*\nBit shifts for the primary bits:\n\n| bits | trait                                                   | shift |\n| ---- | ------------------------------------------------------- | ----- |\n| 1    | dark mode                                               | 30    |\n| 2    | layer: base = 0, components = 1, utilities = 2, css = 3 | 28    |\n| 1    | screens: is this a responsive variation of a rule       | 27    |\n| 5    | responsive based on min-width                           | 22    |\n| 4    | at-rules                                                | 18    |\n| 17   | pseudo and group variants                               | 0     |\n\nThese are calculated by serialize and added afterwards:\n\n| bits | trait                               |\n| ---- | ----------------------------------- |\n| 4    | number of declarations (descending) |\n| 4    | greatest precedence of properties   |\n\nThese are added by shifting the primary bits using multiplication as js only\nsupports bit shift up to 32 bits.\n*/\n\n// 0=none, 1=sm, 2=md, 3=lg, 4=xl, 5=2xl, 6=??, 7=??\n// 0 - 31: 5 bits\n//  576px -> 3\n// 1536px -> 9\n// 36rem -> 3\n// 96rem -> 9\nexport const responsivePrecedence = (css: string): number =>\n  (((_ = /(?:^|min-width: *)(\\d+(?:.\\d+)?)(p)?/.exec(css)) ? +_[1] / (_[2] ? 15 : 1) / 10 : 0) &\n    31) <<\n  22\n\n// Colon and dash count of string (ascending): 0 -> 7 => 3 bits\nexport const seperatorPrecedence = (string: string): number => {\n  _ = 0\n\n  for (let index = string.length; index--; ) {\n    _ += (includes('-:,', string[index]) as unknown) as number\n  }\n\n  return _\n}\n\nexport const atRulePresedence = (css: string): number => (seperatorPrecedence(css) & 15) << 18\n\n// Pesudo variant presedence\n// Chars 3 - 8: Uniquely identifies a pseudo selector\n// represented as a bit set for each relevant value\n// 17 bits: one for each variant plus one for unknown variants\n//\n// ':group-*' variants are normalized to their native pseudo class (':group-hover' -> ':hover')\n// as they already have a higher selector presedence due to the add '.group' ('.group:hover .group-hover:...')\n\n// Sources:\n// - https://bitsofco.de/when-do-the-hover-focus-and-active-pseudo-classes-apply/#orderofstyleshoverthenfocusthenactive\n// - https://developer.mozilla.org/docs/Web/CSS/:active#Active_links\n// - https://github.com/tailwindlabs/tailwindcss/blob/master/stubs/defaultConfig.stub.js#L718\n\nconst PRECEDENCES_BY_PSEUDO_CLASS = [\n  /* fi */ 'rst' /* : 0 */,\n  /* la */ 'st' /* : 1 */,\n  /* ev */ 'en' /* : 2 */,\n  /* od */ 'd' /* : 3 */,\n  /* li */ 'nk' /* : 4 */,\n  /* vi */ 'sited' /* : 5 */,\n  /* em */ 'pty' /* : 6 */,\n  /* ch */ 'ecked' /* : 7 */,\n  /* fo */ 'cus-w' /* ithin : 8 */,\n  /* ho */ 'ver' /* : 9 */,\n  /* fo */ 'cus' /* : 10 */,\n  /* fo */ 'cus-v' /* isible : 11 */,\n  /* ac */ 'tive' /* : 12 */,\n  /* di */ 'sable' /* d : 13 */,\n  /* re */ 'ad-on' /* ly: 14 */,\n  /* op */ 'tiona' /* l: 15 */,\n  /* re */ 'quire' /* d: 16 */,\n]\n\nconst pseudoPrecedence = (pseudoClass: string): number =>\n  1 <<\n  (~(_ = PRECEDENCES_BY_PSEUDO_CLASS.indexOf(pseudoClass.replace(GROUP_RE, ':$2').slice(3, 8)))\n    ? _\n    : 17)\n\n// Variants: 28 bits\nexport const makeVariantPresedenceCalculator = (\n  theme: ThemeResolver,\n  variants: Record<string, string | undefined>,\n) => (presedence: number, variant: string): number =>\n  presedence |\n  // 5: responsive\n  ((_ = theme('screens', tail(variant), ''))\n    ? // 0=none, 1=sm, 2=md, 3=lg, 4=xl, 5=2xl, 6=??, 7=??\n      // 0 - 31: 5 bits\n      // 576px -> 3\n      // 1536px -> 9\n      // 36rem -> 3\n      // 96rem -> 9\n      // Move into screens layer and adjust based on min-width\n      (1 << 27) | responsivePrecedence(buildMediaQuery(_))\n    : // 1: dark mode flag\n    variant === ':dark'\n    ? 1 << 30\n    : // 4: precedence of other at-rules\n    (_ = variants[variant] || variant)[0] === '@'\n    ? atRulePresedence(_)\n    : // 17: pseudo and group variants\n      pseudoPrecedence(variant))\n\n// https://github.com/kripod/otion/blob/main/packages/otion/src/propertyMatchers.ts\n// \"+1\": [\n// \t/* ^border-.*(w|c|sty) */\n// \t\"border-.*(width,color,style)\",\n\n// \t/* ^[tlbr].{2,4}m?$ */\n// \t\"top\",\n// \t\"left\",\n// \t\"bottom\",\n// \t\"right\",\n\n// \t/* ^c.{7}$ */\n// \t\"continue\",\n// ],\n\n// \"-1\": [\n// \t/* ^[fl].{5}l */\n// \t\"flex-flow\",\n// \t\"line-clamp\",\n\n// \t/* ^g.{8}$ */\n// \t\"grid-area\",\n\n// \t/* ^pl */\n// \t\"place-content\",\n// \t\"place-items\",\n// \t\"place-self\",\n// ],\n\n// group: 1 => +1\n// group: 2 => -1\n\n// 0 - 15 => 4 bits\n// Ignore vendor prefixed and custom properties\nexport const declarationPropertyPrecedence = (property: string): number =>\n  property[0] === '-'\n    ? 0\n    : seperatorPrecedence(property) +\n      ((_ = /^(?:(border-(?!w|c|sty)|[tlbr].{2,4}m?$|c.{7}$)|([fl].{5}l|g.{8}$|pl))/.exec(property))\n        ? +!!_[1] /* +1 */ || -!!_[2] /* -1 */\n        : 0) +\n      1\n\n/* eslint-enable no-return-assign, no-cond-assign, no-implicit-coercion */\n", "import type { Context, CSSRules, Prefixer, Rule, Token } from '../types'\n\nimport {\n  join,\n  includes,\n  escape,\n  hyphenate,\n  evalThunk,\n  buildMediaQuery,\n  tail,\n  merge,\n} from '../internal/util'\nimport {\n  responsivePrecedence,\n  declarationPropertyPrecedence,\n  makeVariantPresedenceCalculator,\n  atRulePresedence,\n} from './presedence'\nimport { apply } from './apply'\nexport interface RuleWithPresedence {\n  r: string\n  p: number\n}\n\nconst stringifyBlock = (body: string, selector: string): string => selector + '{' + body + '}'\n\n/**\n * Determines the default order of styles.\n *\n * For example: screens have a higher presedence (eg override) utilities\n */\nconst enum Layer {\n  /**\n   * The preflight styles and any base styles registered by plugins.\n   */\n  base = 0,\n\n  /**\n   * Component classes and any component classes registered by plugins.\n   */\n  components = 1,\n\n  /**\n   * Utility classes and any utility classes registered by plugins.\n   */\n  utilities = 2,\n\n  /**\n   * Inline directives\n   */\n  css = 3,\n}\n\nexport const serialize = (\n  prefix: Prefixer,\n  variants: Record<string, string>,\n  context: Context,\n): ((css: CSSRules, className?: string, rule?: Rule, layer?: Layer) => RuleWithPresedence[]) => {\n  const { theme, tag } = context\n\n  // Hash/Tag tailwind custom properties during serialization\n  // used by `tagVars` below\n  const tagVar = (_: string, property: string): string => '--' + tag(property)\n\n  const tagVars = (value: string | number): string => `${value}`.replace(/--(tw-[\\w-]+)\\b/g, tagVar)\n\n  // Create a css declaration with prefix and hashed custom properties\n  const stringifyDeclaration = (\n    property: string,\n    value: string | number | string[],\n    important: boolean | undefined,\n  ): string => {\n    property = tagVars(property)\n\n    // Support array fallbacks\n    return Array.isArray(value)\n      ? join(\n          value.filter(Boolean).map((value) => prefix(property, tagVars(value), important)),\n          ';',\n        )\n      : prefix(property, tagVars(value), important)\n  }\n\n  // List of css rule with presedence to be injected\n  let rules: RuleWithPresedence[]\n\n  // Responsible for converting the css into one or more css strings\n  // which will be injected into the page\n  const stringify = (\n    // Upper at-rules, selctoer that should wrap each generated css block\n    atRules: string[],\n    // The current css selector\n    selector: string,\n    // The current presedence for determine the css position in the stylesheet\n    presedence: number,\n    // The rules object\n    css: CSSRules,\n    important: boolean | undefined,\n  ): void => {\n    // 1. Properties\n    // 3. *\n    // 2. @...\n    // 3. :pseudo\n    // 4. &\n\n    // The generated declaration block eg body of the css rule\n    let declarations = ''\n\n    // Additional presedence values\n\n    // this ensures that 'border-top-width' has a higer presedence than 'border-top'\n    let maxPropertyPresedence = 0\n\n    // more specfic utilities have less declarations and a higher presedence\n    let numberOfDeclarations = 0\n\n    if ('@apply' in css) {\n      css = merge(\n        evalThunk(apply(css['@apply'] as Token), context),\n        { ...css, '@apply': undefined },\n        context,\n      )\n    }\n\n    // Walk through the object\n    Object.keys(css).forEach((key) => {\n      const value = evalThunk(css[key], context)\n\n      // string, number or Array => a property with a value\n      if (includes('rg', (typeof value)[5]) || Array.isArray(value)) {\n        if (value !== '' && key.length > 1) {\n          // It is a Property\n          const property = hyphenate(key)\n\n          // Update presedence\n          numberOfDeclarations += 1\n          maxPropertyPresedence = Math.max(\n            maxPropertyPresedence,\n            declarationPropertyPrecedence(property),\n          )\n\n          // Add to the declaration block with prefixer applied\n          declarations =\n            (declarations && declarations + ';') +\n            stringifyDeclaration(property, value as string | number | string[], important)\n        }\n      } else if (value) {\n        // If the value is an object this must be a nested block\n        // like '@media ...', '@supports ... ', ':pseudo ...', '& > ...'\n        // If this is a `@` rule\n        if (key[0] === '@') {\n          if (key[1] === 'f') {\n            // `@font-face` is never wrapped, eg always global/root\n            stringify([], key, 0, value as CSSRules, important)\n          } else if (key[1] === 'k') {\n            // @keyframes handling\n            // To prevent\n            // \"@keyframes spin{from{transform:rotate(0deg)}}\"\n            // \"@keyframes spin{to{transform:rotate(360deg)}}\"\n            // we generate waypoints without prefix and grap them from the stack\n            // \"from{transform:rotate(0deg)}\"\n            // \"to{transform:rotate(360deg)}\"\n            // => \"@keyframes name{from{transform:rotate(0deg)}from{transform:rotate(0deg)}}\"\n            const currentSize = rules.length\n\n            stringify([], '', 0, value as CSSRules, important)\n\n            const waypoints = rules.splice(currentSize, rules.length - currentSize)\n\n            // Insert without wrappers\n            rules.push({\n              r: stringifyBlock(\n                join(\n                  waypoints.map((p) => p.r),\n                  '',\n                ),\n                key,\n              ),\n              p: waypoints.reduce((sum, p) => sum + p.p, 0),\n            })\n          } else {\n            if (key.slice(1, 8) == 'screen ') {\n              key = buildMediaQuery(context.theme('screens', tail(key, 8).trim()) as string)\n            }\n\n            // Some nested block like @media, dive into it\n            stringify(\n              [...atRules, key],\n              selector,\n              presedence | responsivePrecedence(key) | atRulePresedence(key),\n              value as CSSRules,\n              important,\n            )\n          }\n        } else if (key === ':global') {\n          stringify([], '', 0, value as CSSRules, important)\n        } else {\n          // A selector block: { '&:focus': { ... } }\n          stringify(\n            atRules,\n            // If this is a nested selector we need to\n            // - replace `&` with the current selector\n            selector\n              ? // Go over the selector and replace the matching selectors respecting multiple selectors\n                selector.replace(/([^,])+/g, (selectorPart) =>\n                  // Same for the key\n                  key.replace(/([^,])+/g, (keyPart) =>\n                    // If the current part has a nested selector replace it\n                    includes(keyPart, '&')\n                      ? keyPart.replace(/&/g, selectorPart)\n                      : (selectorPart && selectorPart + ' ') + keyPart,\n                  ),\n                )\n              : key,\n            presedence,\n            value as CSSRules,\n            important,\n          )\n        }\n      }\n    })\n\n    // We have collected all properties\n    // if there have been some we need to create a css rule\n    if (numberOfDeclarations) {\n      // Inject declarations\n\n      rules.push({\n        // Wrap block with upper at-rules\n        r: atRules.reduceRight(stringifyBlock, stringifyBlock(declarations, selector)),\n\n        // Calculate precedence\n        p:\n          presedence *\n            // Declarations: 8 bits = 256\n            (1 << 8) +\n          // 4: number of declarations (descending)\n          (((Math.max(0, 15 - numberOfDeclarations) & 15) << 4) |\n            // 4: greatest precedence of properties\n            // if there is no property presedence this is most likely a custom property only declaration\n            // these have the highest presedence\n            ((maxPropertyPresedence || 15) & 15)),\n      })\n    }\n  }\n\n  const variantPresedence = makeVariantPresedenceCalculator(theme, variants)\n\n  return (css, className, rule, layer = Layer.base) => {\n    // Initial presedence based on layer (base = 0, components = 1, utilities = 2, css = 3)\n    layer <<= 28\n\n    rules = []\n\n    stringify(\n      [],\n      className ? '.' + escape(className) : '',\n      // If we have a rule, create starting presedence based on the variants\n      rule ? rule.v.reduceRight(variantPresedence, layer) : layer,\n      css,\n      rule && rule.i,\n    )\n\n    return rules\n  }\n}\n", "import type { Context, Sheet, Mode, SheetInit } from '../types'\n\nimport { sortedInsertionIndex } from '../internal/util'\n\nimport type { RuleWithPresedence } from './serialize'\n\n// Insert css rules using presedence to find the correct position within the sheet\nexport const inject = (\n  sheet: Sheet,\n  mode: Mode,\n  init: SheetInit,\n  context: Context,\n): ((rule: RuleWithPresedence) => void) => {\n  // An array of presedence by index within the sheet\n  // always sorted\n  let sortedPrecedences: number[]\n  init<number[]>((value = []) => (sortedPrecedences = value))\n\n  // Cache for already inserted css rules\n  // to prevent double insertions\n  let insertedRules: Set<string>\n  init<Set<string>>((value = new Set()) => (insertedRules = value))\n\n  return ({ r: css, p: presedence }) => {\n    // If not already inserted\n    if (!insertedRules.has(css)) {\n      // Mark rule as inserted\n      insertedRules.add(css)\n\n      // Find the correct position\n      const index = sortedInsertionIndex(sortedPrecedences, presedence)\n\n      try {\n        // Insert\n        sheet.insert(css, index)\n\n        // Update sorted index\n        sortedPrecedences.splice(index, 0, presedence)\n      } catch (error) {\n        // Some thrown error a because of specific pseudo classes\n        // let filter them to prevent unnecessary warnings\n        // ::-moz-focus-inner\n        // :-moz-focusring\n        if (!/:-[mwo]/.test(css)) {\n          mode.report({ id: 'INJECT_CSS_ERROR', css, error: error as Error }, context)\n        }\n      }\n    }\n  }\n}\n", "import type {\n  Configuration,\n  Context,\n  Preflight,\n  ThemeResolver,\n  Theme,\n  Rule,\n  Hasher,\n  InlineDirective,\n  CSSRules,\n  Mode,\n  Falsy,\n  TypescriptCompat,\n} from '../types'\n\nimport { corePlugins } from './plugins'\nimport { createPreflight } from './preflight'\nimport { coreVariants } from './variants'\n\nimport { cssomSheet, voidSheet } from './sheets'\nimport { silent, strict, warn } from './modes'\nimport { autoprefix, noprefix } from './prefix'\nimport { makeThemeResolver } from './theme'\n\nimport { cyrb32, identity, tail, merge, evalThunk, ensureMaxSize } from '../internal/util'\n\nimport { parse } from './parse'\nimport { translate as makeTranslate } from './translate'\nimport { decorate as makeDecorate } from './decorate'\nimport { serialize as makeSerialize } from './serialize'\nimport { inject as makeInject } from './inject'\n\nconst sanitize = <T>(\n  value: T | boolean | undefined,\n  defaultValue: T,\n  disabled: T,\n  enabled = defaultValue,\n): T => (value === false ? disabled : value === true ? enabled : value || defaultValue)\n\nconst loadMode = (mode: Configuration['mode']): Mode =>\n  (typeof mode == 'string'\n    ? ({ t: strict, a: warn, i: silent } as Record<string, Mode>)[mode[1]]\n    : mode) || warn\n\nconst stringifyVariant = (selector: string, variant: string): string =>\n  selector + (variant[1] === ':' ? tail(variant, 2) + ':' : tail(variant)) + ':'\n\n// Creates rule id including variants, negate and directive\n// which is exactly like a tailwind rule\nconst stringify = (rule: Rule, directive = rule.d): string =>\n  typeof directive == 'function'\n    ? ''\n    : rule.v.reduce(stringifyVariant, '') + (rule.n ? '-' : '') + directive + (rule.i ? '!' : '')\n\n// Use hidden '_' property to collect class names which have no css translation like hashed twind classes\nconst COMPONENT_PROPS = { _: { value: '', writable: true } }\n\nexport const configure = (\n  config: Configuration = {},\n): {\n  init: () => void\n  process: (tokens: unknown[]) => string\n} => {\n  const theme = makeThemeResolver(config.theme)\n\n  const mode = loadMode(config.mode)\n\n  const hash = sanitize<Hasher | false>(config.hash, false, false, cyrb32)\n\n  // Track the active rule\n  // 1. to detect if a theme value should be negated\n  // 2. for nested `tw()` calls\n  //    `sm:hover:${({ tw }) => tw`underline`}`\n  //    ==> 'sm:hover:underline`\n  // Start with an \"empty\" rule, to always have value to use\n  let activeRule: { v: string[]; n?: boolean } = { v: [] }\n\n  let translateDepth = 0\n  const lastTranslations: (CSSRules | string | Falsy)[] = []\n\n  // The context that is passed to functions to access the theme, ...\n  const context: Context = {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    tw: (...tokens: unknown[]) => process(tokens),\n\n    theme: ((section: keyof Theme, key?: string | string[], defaultValue?: unknown): unknown => {\n      // Empty key use the standard tailwind default key\n      if (key != null && !key.length) {\n        key = 'DEFAULT'\n      }\n\n      // If no theme value is found, notify 'mode', it may be able to resolve a value\n      const value =\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        theme(section, key as string, defaultValue as any) ||\n        mode.unknown(\n          section,\n          key == null || Array.isArray(key) ? key : key.split('.'),\n          defaultValue != null,\n          context,\n        )\n\n      // Add negate to theme value using calc to support complex values\n      return activeRule.n && value && typeof value == 'string' ? `calc(${value} * -1)` : value\n    }) as ThemeResolver,\n\n    tag: (value) => (hash ? hash(value) : value),\n\n    css: (rules) => {\n      translateDepth++\n      const lastTranslationsIndex = lastTranslations.length\n\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;(typeof rules == 'string' ? parse([rules]) : rules).forEach(convert)\n\n        const css = Object.create(null, COMPONENT_PROPS)\n\n        for (let index = lastTranslationsIndex; index < lastTranslations.length; index++) {\n          const translation = lastTranslations[index]\n\n          if (translation) {\n            switch (typeof translation) {\n              case 'object':\n                merge(css, translation, context)\n                break\n              case 'string':\n                css._ += (css._ && ' ') + translation\n            }\n          }\n        }\n\n        return css\n      } finally {\n        lastTranslations.length = lastTranslationsIndex\n        translateDepth--\n      }\n    },\n  }\n\n  // Used to translate a rule using plugins\n  const translate = makeTranslate({ ...corePlugins, ...config.plugins }, context)\n\n  // Wrap `translate()` to keep track of the active rule\n  // we need to use try-finally as mode.report may throw\n  // and we must always reset the active rule\n  const doTranslate = (rule: Rule): CSSRules | string | Falsy | TypescriptCompat => {\n    // Keep track of active variants for nested `tw` calls\n    const parentRule = activeRule\n    activeRule = rule\n\n    try {\n      return evalThunk(translate(rule), context)\n    } finally {\n      activeRule = parentRule\n    }\n  }\n\n  const variants = { ...coreVariants, ...config.variants }\n\n  // Apply variants to a translation\n  const decorate = makeDecorate(config.darkMode || 'media', variants, context)\n\n  // Serialize a translation to css\n  const serialize = makeSerialize(sanitize(config.prefix, autoprefix, noprefix), variants, context)\n\n  const sheet = config.sheet || (typeof window == 'undefined' ? voidSheet() : cssomSheet(config))\n\n  const { init = (callback) => callback() } = sheet\n\n  // Inject css into the target enviroment\n  const inject = makeInject(sheet, mode, init, context)\n\n  // Cache rule ids and their generated class name\n  let idToClassName: Map<string, string>\n  init<Map<string, string>>((value = new Map()) => (idToClassName = value))\n\n  // Cache generated inline directive names by their function identity\n  const inlineDirectiveName = new WeakMap<InlineDirective, string>()\n\n  // Used as replacer for JSON.stringify to calculate the hash for a inline function\n  const evaluateFunctions = (key: string, value: unknown): unknown =>\n    typeof value == 'function' ? JSON.stringify(value(context), evaluateFunctions) : value\n\n  // Responsible for converting (translate, decorate, serialize, inject) a rule\n  const convert = (rule: Rule): string | undefined | void => {\n    // If there is a active rule this one is nested\n    // we must add the variants and need to reset the id\n    if (!translateDepth && activeRule.v.length) {\n      rule = { ...rule, v: [...activeRule.v, ...rule.v], $: '' }\n    }\n\n    // Static rules (from template literals) can cache their id\n    // this greatly improves performance\n    if (!rule.$) {\n      // For inline directives (functions) `stringify` returns an empty string\n      // in that case we check if we already have a name for the function\n      // and use that one to generate the id\n      rule.$ = stringify(rule, inlineDirectiveName.get(rule.d as InlineDirective))\n    }\n\n    // Check if we already have a class name for this rule id\n    let className = translateDepth ? null : idToClassName.get(rule.$)\n\n    if (className == null) {\n      // 2. translate each rule using plugins\n      let translation = doTranslate(rule)\n\n      // If this is a unknown inline directive\n      if (!rule.$) {\n        // We can now generate a unique name based on the created translation\n        // This id does not include the variants as a directive is always independent of variants\n        // Variants are applied below using `decorate()`\n        // JSON.stringify ignores functions - by using a custom replace\n        // we can calculate a hash based on the value returned by these functions\n        // eslint-disable-next-line no-var\n        rule.$ = cyrb32(JSON.stringify(translation, evaluateFunctions))\n\n        // Remember it\n        inlineDirectiveName.set(rule.d as InlineDirective, rule.$)\n\n        // Generate an id including the current variants\n        rule.$ = stringify(rule, rule.$)\n      }\n\n      if (translation && typeof translation == 'object') {\n        // 3. decorate: apply variants\n        translation = decorate(translation, rule)\n\n        if (translateDepth) {\n          lastTranslations.push(translation)\n        } else {\n          // - components: layer.components = 1\n          // - plugins: layer.utilities = 2\n          // - inline directive: layer.css = 3\n          const layer = typeof rule.d == 'function' ? (typeof translation._ == 'string' ? 1 : 3) : 2\n\n          className =\n            hash || typeof rule.d == 'function' ? (hash || cyrb32)(layer + rule.$) : rule.$\n\n          // 4. serialize: convert to css string with precedence\n          // 5. inject: add to dom\n          serialize(translation, className, rule, layer).forEach(inject)\n\n          if (translation._) {\n            className += ' ' + translation._\n          }\n        }\n      } else {\n        // CSS class names have been returned\n        if (typeof translation == 'string') {\n          // Use as is\n          className = translation\n        } else {\n          // No plugin or plugin did not return something\n          className = rule.$\n          mode.report({ id: 'UNKNOWN_DIRECTIVE', rule: className }, context)\n        }\n\n        if (translateDepth && typeof rule.d !== 'function') {\n          lastTranslations.push(className)\n        }\n      }\n\n      if (!translateDepth) {\n        // Remember the generated class name\n        idToClassName.set(rule.$, className as string)\n\n        // Ensure the cache does not grow unlimited\n        ensureMaxSize(idToClassName, 30000)\n      }\n    }\n\n    return className as string\n  }\n\n  // This function is called from `tw(...)`\n  // it parses, translates, decorates, serializes and injects the tokens\n  const process = (tokens: unknown[]): string =>\n    parse(tokens).map(convert).filter(Boolean).join(' ')\n\n  // Determine if we should inject the preflight (browser normalize)\n  const preflight = sanitize<Preflight | false | CSSRules>(config.preflight, identity, false)\n\n  if (preflight) {\n    // Create the base tailwind preflight css rules\n    const css = createPreflight(theme)\n\n    // Call the preflight handler, serialize and inject the result\n    const styles = serialize(\n      typeof preflight == 'function'\n        ? evalThunk(preflight(css, context), context) || css\n        : { ...css, ...preflight },\n    )\n\n    init<boolean>((injected = (styles.forEach(inject), true)) => injected)\n  }\n\n  return {\n    init: () => mode.report({ id: 'LATE_SETUP_CALL' }, context),\n    process,\n  }\n}\n", "import type { Configuration, Context, Instance } from '../types'\n\nimport { configure } from './configure'\n\nexport const create = (config?: Configuration): Instance => {\n  // We are using lazy variables to trigger setup either\n  // on first `setup` or `tw` call\n  //\n  // This allows to provide one-time lazy configuration\n  //\n  // These variables are not named `tw` and `setup`\n  // as we use `tw` and `setup` to find the callee site\n  // during stacktrace generation\n  // This allows the error stacktrace to start at the call site.\n\n  // Used by `tw`\n  let process = (tokens: unknown[]): string => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    init()\n    return process(tokens)\n  }\n\n  // Used by `setup`\n  let init = (config?: Configuration): void => {\n    // Replace implementation with configured ones\n    // `process`: the real one\n    // `init`: invokes `mode.report` with `LATE_SETUP_CALL`\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;({ process, init } = configure(config))\n  }\n\n  // If we got a config, start right away\n  if (config) init(config)\n\n  let context: Context\n  const fromContext = <Key extends keyof Context>(key: Key) => (): Context[Key] => {\n    if (!context) {\n      process([\n        (_: Context) => {\n          context = _\n          return ''\n        },\n      ])\n    }\n\n    return context[key]\n  }\n\n  // The instance methods delegate to the lazy ones.\n  // This ensures that after setup we use the configured\n  // `process` and `setup` fails.\n  return {\n    tw: Object.defineProperties((...tokens: unknown[]) => process(tokens), {\n      theme: {\n        get: fromContext('theme'),\n      },\n      // css: {\n      //   get: fromContext('css'),\n      // },\n      // tag: {\n      //   get: fromContext('tag'),\n      // },\n    }),\n\n    setup: (config) => init(config),\n  }\n}\n", "import { create } from './instance'\n\nexport const { tw, setup } = create()\n"],
  "mappings": "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",
  "names": []
}
